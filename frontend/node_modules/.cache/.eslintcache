[{"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/index.js":"1","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/main/App.js":"2","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/navbar/navbar.component.js":"3","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/products/products.component.js":"4","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/products/product/product.component.js":"5","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/hero/hero.component.js":"6","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/banners/banner.top.component.js":"7","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/flyout-menus/shopping-cart.component.js":"8","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/storefront/storefront.page.js":"9","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/flyout-menus/account.component.js":"10","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/admin-dashboard/admin.page.js":"11","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/dropdown.component.js":"12","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/switch.component.js":"13","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/navbar/tabs.component.js":"14","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/navbar/steps.component.js":"15","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/text-input.component.js":"16","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/image-upload.component.js":"17","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/price-input.component.js":"18","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/products/products.enum.js":"19","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/textarea.component.js":"20","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/sizing-input.component.js":"21","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/plain-input.component.js":"22","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/checkboxes.component.js":"23","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/number-input.component.js":"24","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/website-input.component.js":"25","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/product-overview/product.page.js":"26","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/redux/store.js":"27","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/redux/reducer.js":"28","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/redux/actions.js":"29","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/category/category.page.js":"30","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/checkout/checkout-form.component.js":"31","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/admin-dashboard/components/transactions.component.js":"32","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/footer/footer.component.js":"33","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/user/user.page.js":"34","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/navbar/search.component.js":"35","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/user/sub-pages/user.account.js":"36","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/user/sub-pages/rewards.account.js":"37","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/user/sub-pages/orders.account.js":"38","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/user/sub-pages/reviews.account.js":"39","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/user/sub-pages/coupons.account.js":"40","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/admin-dashboard/sub-pages/products.admin.js":"41","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/admin-dashboard/sub-pages/dashboard.admin.js":"42"},{"size":949,"mtime":1655138073633,"results":"43","hashOfConfig":"44"},{"size":2285,"mtime":1655153268423,"results":"45","hashOfConfig":"44"},{"size":22829,"mtime":1655151994701,"results":"46","hashOfConfig":"44"},{"size":1073,"mtime":1654894601030,"results":"47","hashOfConfig":"44"},{"size":1163,"mtime":1654537921832,"results":"48","hashOfConfig":"44"},{"size":395,"mtime":1654204457764,"results":"49","hashOfConfig":"44"},{"size":1709,"mtime":1654204653884,"results":"50","hashOfConfig":"44"},{"size":4042,"mtime":1655159095328,"results":"51","hashOfConfig":"44"},{"size":277,"mtime":1654894807631,"results":"52","hashOfConfig":"44"},{"size":4530,"mtime":1655152486481,"results":"53","hashOfConfig":"44"},{"size":12053,"mtime":1655163853822,"results":"54","hashOfConfig":"44"},{"size":3365,"mtime":1654362038750,"results":"55","hashOfConfig":"44"},{"size":1165,"mtime":1654343237654,"results":"56","hashOfConfig":"44"},{"size":1693,"mtime":1654343758536,"results":"57","hashOfConfig":"44"},{"size":2023,"mtime":1654343914906,"results":"58","hashOfConfig":"44"},{"size":673,"mtime":1654354658951,"results":"59","hashOfConfig":"44"},{"size":3099,"mtime":1654531913399,"results":"60","hashOfConfig":"44"},{"size":1781,"mtime":1654355151769,"results":"61","hashOfConfig":"44"},{"size":3272,"mtime":1655432579541,"results":"62","hashOfConfig":"44"},{"size":847,"mtime":1654464473637,"results":"63","hashOfConfig":"44"},{"size":6590,"mtime":1654551357636,"results":"64","hashOfConfig":"44"},{"size":828,"mtime":1654463601333,"results":"65","hashOfConfig":"44"},{"size":2076,"mtime":1654461606457,"results":"66","hashOfConfig":"44"},{"size":703,"mtime":1654467738710,"results":"67","hashOfConfig":"44"},{"size":842,"mtime":1654476202990,"results":"68","hashOfConfig":"44"},{"size":14210,"mtime":1658766760832,"results":"69","hashOfConfig":"44"},{"size":177,"mtime":1654870510189,"results":"70","hashOfConfig":"44"},{"size":450,"mtime":1655157503730,"results":"71","hashOfConfig":"44"},{"size":163,"mtime":1654869015667,"results":"72","hashOfConfig":"44"},{"size":14663,"mtime":1655131042002,"results":"73","hashOfConfig":"44"},{"size":20699,"mtime":1655158625234,"results":"74","hashOfConfig":"44"},{"size":5434,"mtime":1655077160831,"results":"75","hashOfConfig":"44"},{"size":11261,"mtime":1655138681371,"results":"76","hashOfConfig":"44"},{"size":11962,"mtime":1655152368618,"results":"77","hashOfConfig":"44"},{"size":8452,"mtime":1655151386890,"results":"78","hashOfConfig":"44"},{"size":127,"mtime":1655152789685,"results":"79","hashOfConfig":"44"},{"size":136,"mtime":1655152892903,"results":"80","hashOfConfig":"44"},{"size":133,"mtime":1655152820149,"results":"81","hashOfConfig":"44"},{"size":136,"mtime":1655152844946,"results":"82","hashOfConfig":"44"},{"size":136,"mtime":1655152866942,"results":"83","hashOfConfig":"44"},{"size":22380,"mtime":1655236004336,"results":"84","hashOfConfig":"44"},{"size":2758,"mtime":1655153290991,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b2dcax",{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/index.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/main/App.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/navbar/navbar.component.js",["227","228","229","230","231","232","233","234","235"],[],"import { Fragment, useState } from 'react'\nimport {Link} from 'react-router-dom'\nimport { Dialog, Popover, Tab, Transition } from '@headlessui/react'\nimport { MenuIcon, SearchIcon, XIcon } from '@heroicons/react/outline'\n\nimport AccountMenu from '../flyout-menus/account.component'\nimport ShoppingMenu from '../flyout-menus/shopping-cart.component'\nimport SearchBar from './search.component'\n\nimport ukFlag from '../../assets/flags/united-kingdom-flag.svg'\nimport FlucturLogo from '../../assets/Logos/Fluctur-Logo.svg'\n\nconst navigation = {\n  categories: [\n    {\n      id: 'women',\n      name: 'Women',\n      featured: [\n        {\n          name: 'New Arrivals',\n          href: '#',\n          imageSrc: 'https://tailwindui.com/img/ecommerce-images/mega-menu-category-01.jpg',\n          imageAlt: 'Models sitting back to back, wearing Basic Tee in black and bone.',\n        }\n      ],\n      sections: [\n        [\n          {\n            id: 'shoes',\n            name: 'Shoes & Accessories',\n            items: [\n              { name: 'Sneakers', href: '/Shoes/Trainers' },\n              { name: 'Boots', href: '/Shoes/Boots' },\n              { name: 'Flats', href: '/Shoes/Flats' },\n              { name: 'Sandals', href: '/Shoes/Sandals' },\n              { name: 'Heels', href: '/Shoes/Heels' },\n              { name: 'Socks', href: '/Shoes/Socks' },\n            ],\n          },\n          {\n            id: 'collection',\n            name: 'Shop Collection',\n            items: [\n              { name: 'Everything', href: '/Collection/Everything' },\n              { name: 'Core', href: '/Collection/Core' },\n              { name: 'New Arrivals', href: '/Collection/New-Arrivals' },\n              { name: 'Sale', href: '/Collection/Sale' },\n              { name: 'Accessories', href: '/Collection/Accessories' },\n            ],\n          },\n        ],\n        [\n          {\n            id: 'clothing',\n            name: 'All Clothing',\n            items: [\n              { name: 'Blazers', href: '/Clothing/Blazers' },\n              { name: 'Blouses & Shirts', href: '/Clothing/Blouses-Shirts' },\n              { name: 'Bodysuits, Playsuits, Jumpsuits', href: '/Clothing/Bodysuits-Playsuits-Jumpsuits' },\n              { name: 'Dresses', href: '/Clothing/Dresses' },\n              { name: 'Hoodies', href: '/Clothing/Hoodies-Sweatshirts' },\n              { name: 'Jackets', href: '/Clothing/Jackets' },\n              { name: 'Leggings', href: '/Clothing/Leggings' },\n              { name: 'Lingerie', href: '/Clothing/Lingerie' },\n              { name: 'Sets', href: '/Clothing/Sets' },\n              { name: 'Shorts', href: '/Clothing/Shorts' },\n              { name: 'Skirts', href: '/Clothing/Skirts' },\n              { name: 'Sportswear', href: '/Clothing/Sportswear' },\n              { name: 'Sweaters', href: '/Clothing/Sweaters' },\n              { name: 'Swimwear', href: '/Clothing/Swimwear' },\n              { name: 'Trousers', href: '/Clothing/Trousers' },\n              { name: 'Tops', href: '/Clothing/Tops' },\n              { name: 'Underwear', href: '/Clothing/Underwear' },\n            ],\n          },\n        ],\n        [\n          {\n            id: 'accessories',\n            name: 'All Accessories',\n            items: [\n              { name: 'Watches', href: '/Accessories/Watches' },\n              { name: 'Wallets', href: '/Accessories/Wallets' },\n              { name: 'Bags', href: '/Accessories/Bags' },\n              { name: 'Sunglasses', href: '/Accessories/Sunglasses' },\n              { name: 'Hats', href: '/Accessories/Hats' },\n              { name: 'Belts', href: '/Accessories/Belts' },\n            ],\n          },\n        ],\n      ],\n    },\n    {\n      id: 'men',\n      name: 'Men',\n      featured: [\n        {\n          name: 'Accessories',\n          href: '#',\n          imageSrc: 'https://tailwindui.com/img/ecommerce-images/home-page-03-category-01.jpg',\n          imageAlt:\n            'Wooden shelf with gray and olive drab green baseball caps, next to wooden clothes hanger with sweaters.',\n        },\n      ],\n      sections: [\n        [\n          {\n            id: 'shoes',\n            name: 'Shoes & Accessories',\n            items: [\n              { name: 'Sneakers', href: '/Shoes/Trainers' },\n              { name: 'Boots', href: '/Shoes/Boots' },\n              { name: 'Sandals', href: '/Shoes/Sandals' },\n              { name: 'Socks', href: '/Shoes/Socks' },\n            ],\n          },\n          {\n            id: 'collection',\n            name: 'Shop Collection',\n            items: [\n              { name: 'Everything', href: '/Collection/Everything' },\n              { name: 'Core', href: '/Collection/Core' },\n              { name: 'New Arrivals', href: '/Collection/New-Arrivals' },\n              { name: 'Sale', href: '/Collection/Sale' },\n            ],\n          },\n        ],\n        [\n          {\n            id: 'clothing',\n            name: 'All Clothing',\n            items: [\n              { name: 'Basic Tees', href: '/Clothing/T-Shirts' },\n              { name: 'Artwork Tees', href: '/Clothing/Artwork-Tees' },\n              { name: 'Pants', href: '/Clothing/Trousers' },\n              { name: 'Hoodies', href: '/Clothing/Hoodies' },\n              { name: 'Swimsuits', href: '/Clothing/Swimsuits' },\n            ],\n          },\n          {\n            id: 'accessories',\n            name: 'All Accessories',\n            items: [\n              { name: 'Watches', href: '/Accessories/Watches' },\n              { name: 'Wallets', href: '/Accessories/Wallets' },\n              { name: 'Bags', href: '/Accessories/Bags' },\n              { name: 'Sunglasses', href: '/Accessories/Sunglasses' },\n              { name: 'Hats', href: '/Accessories/Hats' },\n              { name: 'Belts', href: '/Accessories/Belts' },\n            ],\n          },\n        ],\n      ],\n    },\n  ],\n  pages: [\n    { name: 'Company', href: '#' },\n    { name: 'Stores', href: '#' },\n  ],\n}\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function StoreNavigation() {\n  const [open, setOpen] = useState(false)\n  const [search, setSearch] = useState(false);\n\n  function openSearchBar() {\n    if (search) {\n      setSearch(false);\n    } else {\n      setSearch(true);\n    }\n  }\n\n  return (\n    <div className=\"bg-white z-40 sticky top-0\">\n      {/* Mobile menu */}\n      <Transition.Root show={open} as={Fragment}>\n        <Dialog as=\"div\" className=\"relative z-40 lg:hidden\" onClose={setOpen}>\n          <Transition.Child\n            as={Fragment}\n            enter=\"transition-opacity ease-linear duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"transition-opacity ease-linear duration-300\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n          </Transition.Child>\n\n          <div className=\"fixed inset-0 flex z-40\">\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition ease-in-out duration-300 transform\"\n              enterFrom=\"-translate-x-full\"\n              enterTo=\"translate-x-0\"\n              leave=\"transition ease-in-out duration-300 transform\"\n              leaveFrom=\"translate-x-0\"\n              leaveTo=\"-translate-x-full\"\n            >\n              <Dialog.Panel className=\"relative max-w-xs w-full bg-white shadow-xl pb-12 flex flex-col overflow-y-auto\">\n                <div className=\"px-4 pt-5 pb-2 flex\">\n                  <button\n                    type=\"button\"\n                    className=\"-m-2 p-2 rounded-md inline-flex items-center justify-center text-gray-400\"\n                    onClick={() => setOpen(false)}\n                  >\n                    <span className=\"sr-only\">Close menu</span>\n                    <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                  </button>\n                </div>\n\n                {/* Links */}\n                <Tab.Group as=\"div\" className=\"mt-2\">\n                  <div className=\"border-b border-gray-200\">\n                    <Tab.List className=\"-mb-px flex px-4 space-x-8\">\n                      {navigation.categories.map((category) => (\n                        <Tab\n                          key={category.name}\n                          className={({ selected }) =>\n                            classNames(\n                              selected ? 'text-indigo-600 border-indigo-600' : 'text-gray-900 border-transparent',\n                              'flex-1 whitespace-nowrap py-4 px-1 border-b-2 text-base font-medium'\n                            )\n                          }\n                        >\n                          {category.name}\n                        </Tab>\n                      ))}\n                    </Tab.List>\n                  </div>\n                  <Tab.Panels as={Fragment}>\n                    {navigation.categories.map((category) => (\n                      <Tab.Panel key={category.name} className=\"pt-10 pb-8 px-4 space-y-10\">\n                        <div className=\"space-y-4\">\n                          {category.featured.map((item, itemIdx) => (\n                            <div\n                              key={itemIdx}\n                              className=\"group relative aspect-w-1 aspect-h-1 rounded-md bg-gray-100 overflow-hidden\"\n                            >\n                              <img\n                                src={item.imageSrc}\n                                alt={item.imageAlt}\n                                className=\"object-center object-cover group-hover:opacity-75\"\n                              />\n                              <div className=\"flex flex-col justify-end\">\n                                <div className=\"p-4 bg-white bg-opacity-60 text-base sm:text-sm\">\n                                  <a href={item.href} className=\"font-medium text-gray-900\">\n                                    <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                                    {item.name}\n                                  </a>\n                                  <p aria-hidden=\"true\" className=\"mt-0.5 text-gray-700 sm:mt-1\">\n                                    Shop now\n                                  </p>\n                                </div>\n                              </div>\n                            </div>\n                          ))}\n                        </div>\n                        {category.sections.map((column, columnIdx) => (\n                          <div key={columnIdx} className=\"space-y-10\">\n                            {column.map((section) => (\n                              <div key={section.name}>\n                                <p\n                                  id={`${category.id}-${section.id}-heading-mobile`}\n                                  className=\"font-medium text-gray-900\"\n                                >\n                                  {section.name}\n                                </p>\n                                <ul\n                                  role=\"list\"\n                                  aria-labelledby={`${category.id}-${section.id}-heading-mobile`}\n                                  className=\"mt-6 flex flex-col space-y-6\"\n                                >\n                                  {section.items.map((item) => (\n                                    <li key={item.name} className=\"flow-root\">\n                                      <a href={item.href} className=\"-m-2 p-2 block text-gray-500\">\n                                        {item.name}\n                                      </a>\n                                    </li>\n                                  ))}\n                                </ul>\n                              </div>\n                            ))}\n                          </div>\n                        ))}\n                      </Tab.Panel>\n                    ))}\n                  </Tab.Panels>\n                </Tab.Group>\n\n                <div className=\"border-t border-gray-200 py-6 px-4 space-y-6\">\n                  {navigation.pages.map((page) => (\n                    <div key={page.name} className=\"flow-root\">\n                      <a href={page.href} className=\"-m-2 p-2 block font-medium text-gray-900\">\n                        {page.name}\n                      </a>\n                    </div>\n                  ))}\n                </div>\n\n                <div className=\"border-t border-gray-200 py-6 px-4\">\n                  <a href=\"#\" className=\"-m-2 p-2 flex items-center\">\n                    <img\n                      src={ukFlag}\n                      alt=\"\"\n                      className=\"w-5 h-auto block flex-shrink-0\"\n                    />\n                    <span className=\"ml-3 block text-base font-medium text-gray-900\">GBP</span>\n                    <span className=\"sr-only\">, change currency</span>\n                  </a>\n                </div>\n              </Dialog.Panel>\n            </Transition.Child>\n          </div>\n        </Dialog>\n      </Transition.Root>\n\n      <header className=\"relative bg-white\">\n        <nav aria-label=\"Top\" className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"border-b border-gray-200\">\n            <div className=\"h-16 flex items-center justify-between\">\n              <div className=\"flex-1 flex items-center lg:hidden\">\n                <button\n                  type=\"button\"\n                  className=\"-ml-2 bg-white p-2 rounded-md text-gray-400\"\n                  onClick={() => setOpen(true)}\n                >\n                  <span className=\"sr-only\">Open menu</span>\n                  <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                <a href=\"#\" className=\"ml-2 p-2 text-gray-400 hover:text-gray-500\">\n                  <span className=\"sr-only\">Search</span>\n                  <SearchIcon className=\"w-6 h-6\" aria-hidden=\"true\" />\n                </a>\n              </div>\n\n              {/* Flyout menus */}\n              <Popover.Group className=\"hidden lg:flex-1 lg:block lg:self-stretch\">\n                <div className=\"h-full flex space-x-8\">\n                  {navigation.categories.map((category) => (\n                    <Popover key={category.name} className=\"flex\">\n                      {({ open }) => (\n                        <>\n                          <div className=\"relative flex\">\n                            <Popover.Button\n                              className={classNames(\n                                open ? 'text-indigo-600' : 'text-gray-700 hover:text-gray-800',\n                                'relative z-10 flex items-center justify-center transition-colors ease-out duration-200 text-sm font-medium'\n                              )}\n                            >\n                              {category.name}\n                              <span\n                                className={classNames(\n                                  open ? 'bg-indigo-600' : '',\n                                  'absolute bottom-0 inset-x-0 h-0.5 transition-colors ease-out duration-200 sm:mt-5 sm:transform sm:translate-y-px'\n                                )}\n                                aria-hidden=\"true\"\n                              />\n                            </Popover.Button>\n                          </div>\n\n                          <Transition\n                            as={Fragment}\n                            enter=\"transition ease-out duration-200\"\n                            enterFrom=\"opacity-0\"\n                            enterTo=\"opacity-100\"\n                            leave=\"transition ease-in duration-150\"\n                            leaveFrom=\"opacity-100\"\n                            leaveTo=\"opacity-0\"\n                          >\n                            <Popover.Panel className=\"absolute top-full inset-x-0\">\n                              {/* Presentational element used to render the bottom shadow, if we put the shadow on the actual panel it pokes out the top, so we use this shorter element to hide the top of the shadow */}\n                              <div className=\"absolute inset-0 top-1/2 bg-white shadow\" aria-hidden=\"true\" />\n\n                              <div className=\"relative bg-white\">\n                                <div className=\"max-w-7xl mx-auto px-8\">\n                                  <div className=\"grid grid-cols-2 gap-y-10 gap-x-8 py-16\">\n                                    <div className=\"grid grid-rows-1 grid-cols-2 gap-8 text-sm\">\n                                      {category.featured.map((item, itemIdx) => (\n                                        <div\n                                          key={item.name}\n                                          className={classNames(\n                                            itemIdx === 0 ? 'col-span-2 aspect-w-2' : '',\n                                            'group relative aspect-w-1 aspect-h-1 rounded-md bg-gray-100 overflow-hidden'\n                                          )}\n                                        >\n                                          <img\n                                            src={item.imageSrc}\n                                            alt={item.imageAlt}\n                                            className=\"object-center object-cover group-hover:opacity-75\"\n                                          />\n                                          <div className=\"flex flex-col justify-end\">\n                                            <div className=\"p-4 bg-white bg-opacity-60 text-sm\">\n                                              <a href={item.href} className=\"font-medium text-gray-900\">\n                                                <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                                                {item.name}\n                                              </a>\n                                              <p aria-hidden=\"true\" className=\"mt-0.5 text-gray-700 sm:mt-1\">\n                                                Shop now\n                                              </p>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      ))}\n                                    </div>\n                                    <div className=\"grid grid-cols-3 gap-y-10 gap-x-8 text-sm text-gray-500\">\n                                      {category.sections.map((column, columnIdx) => (\n                                        <div key={columnIdx} className=\"space-y-10\">\n                                          {column.map((section) => (\n                                            <div key={section.name}>\n                                              {/* Change the below to link to all items within this section */}\n                                              <a\n                                                href='#'\n                                                id={`${category.id}-${section.id}-heading`}\n                                                className=\"font-medium text-gray-900\"\n                                              >\n                                                {section.name}\n                                              </a>\n                                              <ul\n                                                role=\"list\"\n                                                aria-labelledby={`${category.id}-${section.id}-heading`}\n                                                className=\"mt-4 space-y-4\"\n                                              >\n                                                {section.items.map((item) => (\n                                                  <li key={item.name} className=\"flex\">\n                                                    <a href={item.href} className=\"hover:text-gray-800\">\n                                                      {item.name}\n                                                    </a>\n                                                  </li>\n                                                ))}\n                                              </ul>\n                                            </div>\n                                          ))}\n                                        </div>\n                                      ))}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </Popover.Panel>\n                          </Transition>\n                        </>\n                      )}\n                    </Popover>\n                  ))}\n\n                  {navigation.pages.map((page) => (\n                    <a\n                      key={page.name}\n                      href={page.href}\n                      className=\"flex items-center text-sm font-medium text-gray-700 hover:text-gray-800\"\n                    >\n                      {page.name}\n                    </a>\n                  ))}\n                </div>\n              </Popover.Group>\n\n              {/* Logo */}\n              <Link to=\"/\" className=\"flex\">\n                <span className=\"sr-only\">Workflow</span>\n                <img\n                  className=\"h-6 w-auto\"\n                  src={FlucturLogo}\n                  alt=\"\"\n                />\n              </Link>\n\n              <div className=\"flex-1 flex items-center justify-end\">\n                <a href=\"#\" className=\"hidden text-gray-700 hover:text-gray-800 lg:flex lg:items-center\">\n                  <img\n                    src={ukFlag}\n                    alt=\"\"\n                    className=\"w-5 h-auto block flex-shrink-0\"\n                  />\n                  <span className=\"ml-3 block text-sm font-medium\">GBP</span>\n                  <span className=\"sr-only\">, change currency</span>\n                </a>\n\n                {/* Search */}\n                <a className=\"hidden ml-6 p-2 text-gray-400 hover:text-gray-500 lg:block cursor-pointer\">\n                  <span className=\"sr-only\">Search</span>\n                  <SearchIcon className=\"w-6 h-6\" aria-hidden=\"true\" onClick={openSearchBar} />\n                </a>\n                <SearchBar searchFlag={search} />\n\n                {/* Account */}\n                <a href=\"#\" className=\"p-2 text-gray-400 hover:text-gray-500 lg:ml-4\">\n                  <AccountMenu />\n                </a>\n\n                {/* Cart */}\n                <a href=\"#\" className=\"group -m-2 p-2 flex items-center\">\n                  <ShoppingMenu />\n                </a>\n              </div>\n            </div>\n          </div>\n        </nav>\n      </header>\n    </div>\n  )\n}","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/products/products.component.js",["236","237"],[],"import React, { useState, useEffect } from 'react'\nimport Product from './product/product.component';\n\n// const products = [\n//     { id: 1, name: 'Basic Bag', description: 'Stylish Basic Bag', price: '24.99', imageSrc: 'https://tailwindui.com/img/ecommerce-images/category-page-07-product-02.jpg', imageAlt: '#', href: '#', color: 'grey' },\n//     { id: 2, name: 'Basic T-Shirt', description: 'A very basic t-shirt', price: '11.99', imageSrc: 'https://tailwindui.com/img/ecommerce-images/product-page-01-related-product-01.jpg', imageAlt: 'A beautiful black basic t-shirt', href: '#', color: 'black' },\n// ];\n\n// retrieve the products from the database.\n\nconst Products = ({ numberOfColumns, products }) => {\n\n  return (\n    <section className={`max-w-7xl mx-auto mt-6 grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-${numberOfColumns} px-4 xl:gap-x-8 sm:px-8 lg:px-6`}>\n        {\n            products.map((product, i) => {\n                return <Product product={product} index={i} />\n            })\n        }\n    </section>\n  )\n}\n\nexport default Products;","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/products/product/product.component.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/hero/hero.component.js",[],[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/banners/banner.top.component.js",["238"],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/flyout-menus/shopping-cart.component.js",["239","240","241"],[],"/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { ShoppingBagIcon } from '@heroicons/react/outline'\nimport { Popover, Transition } from '@headlessui/react'\nimport { TrashIcon } from '@heroicons/react/solid'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { remove } from '../../redux/reducer'\n\nexport default function ShoppingMenu() {\n\n    const cart = useSelector(state => state.cart.value);\n    const dispatch = useDispatch();\n\n  return (\n      <>\n        {/* Cart */}\n        <Popover className=\"ml-4 flow-root text-sm lg:relative lg:ml-8\">\n            <Popover.Button className=\"group -m-2 p-2 flex items-center\">\n                <ShoppingBagIcon\n                className=\"flex-shrink-0 h-6 w-6 text-gray-400 group-hover:text-gray-500\"\n                aria-hidden=\"true\"\n                />\n                <span className=\"ml-2 text-sm font-medium text-gray-700 group-hover:text-gray-800\">{cart.length}</span>\n                <span className=\"sr-only\">items in cart, view bag</span>\n            </Popover.Button>\n            <Transition\n                as={Fragment}\n                enter=\"transition ease-out duration-200\"\n                enterFrom=\"opacity-0\"\n                enterTo=\"opacity-100\"\n                leave=\"transition ease-in duration-150\"\n                leaveFrom=\"opacity-100\"\n                leaveTo=\"opacity-0\"\n            >\n                <Popover.Panel className=\"absolute top-16 inset-x-0 mt-px pb-6 bg-white shadow-lg sm:px-2 lg:top-full lg:left-auto lg:right-0 lg:mt-3 lg:-mr-1.5 lg:w-80 lg:rounded-lg lg:ring-1 lg:ring-black lg:ring-opacity-5\">\n                <h2 className=\"sr-only\">Shopping Cart</h2>\n\n                <div className=\"max-w-2xl mx-auto px-4\">\n                    <ul role=\"list\" className=\"divide-y py-2 divide-gray-200\">\n                    {cart.map((item, index) => (\n                        <li key={item.product._id} className=\"py-6 flex items-center\">\n                        <img\n                            src={`http://localhost:3000/api/images/${item.product.images[0]}`}\n                            className=\"flex-none w-16 h-16 rounded-md border border-gray-200\"\n                        />\n                        <div className=\"ml-4 flex-auto\">\n                            <h3 className=\"font-medium text-gray-900\">\n                            <a href={`/Product/${item.product._id}/${item.product.name}`}>{item.product.name}</a>\n                            </h3>\n                            <p className=\"text-gray-500\">{item.product.colour}</p>\n                        </div>\n                        <div>\n                            <button\n                                type=\"button\"\n                                className=\"-m-2.5 bg-white p-2.5 flex items-center justify-center text-gray-400 hover:text-gray-500\"\n                            >\n                                <span className=\"sr-only\">Remove</span>\n                                <TrashIcon className=\"h-5 w-5\" aria-hidden=\"true\" onClick={() => dispatch(remove({index}))} />\n                            </button>\n                        </div>\n                        </li>\n                    ))}\n                    </ul>\n\n                    <a href='/Checkout'>\n                        <button\n                        className=\"w-full bg-indigo-600 border border-transparent rounded-md shadow-sm py-2 px-4 text-sm font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-indigo-500\"\n                        >\n                        Checkout\n                        </button>\n                    </a>\n\n                    <p className=\"mt-6 text-center\">\n                    <a href=\"#\" className=\"text-sm font-medium text-indigo-600 hover:text-indigo-500\">\n                        View Shopping Bag\n                    </a>\n                    </p>\n                </div>\n                </Popover.Panel>\n            </Transition>\n        </Popover>\n    </>\n  )\n}","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/storefront/storefront.page.js",["242"],[],"import React from 'react'\n// Components\nimport Hero from '../../components/hero/hero.component';\nimport Products from '../../components/products/products.component';\n\nconst Storefront = () => {\n  return (\n    <main>\n        <Hero />\n    </main>\n  )\n}\n\nexport default Storefront","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/flyout-menus/account.component.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/admin-dashboard/admin.page.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/dropdown.component.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/switch.component.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/navbar/tabs.component.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/navbar/steps.component.js",["243"],[],"import React from 'react'\n\nconst Steps = ({steps}) => {\n  return (\n    <nav aria-label=\"Progress\" className='mt-20'>\n        <ol role=\"list\" className=\"space-y-4 md:flex md:space-y-0 md:space-x-8\">\n            {steps.map((step) => (\n            <li key={step.name} className=\"md:flex-1\">\n                {step.status === 'complete' ? (\n                <a\n                    href={step.href}\n                    className=\"group pl-4 py-2 flex flex-col border-l-4 border-indigo-600 hover:border-indigo-800 md:pl-0 md:pt-4 md:pb-0 md:border-l-0 md:border-t-4\"\n                >\n                    <span className=\"text-xs text-indigo-600 font-semibold tracking-wide uppercase group-hover:text-indigo-800\">\n                    {step.id}\n                    </span>\n                    <span className=\"text-sm font-medium\">{step.name}</span>\n                </a>\n                ) : step.status === 'current' ? (\n                <a\n                    href={step.href}\n                    className=\"pl-4 py-2 flex flex-col border-l-4 border-indigo-600 md:pl-0 md:pt-4 md:pb-0 md:border-l-0 md:border-t-4\"\n                    aria-current=\"step\"\n                >\n                    <span className=\"text-xs text-indigo-600 font-semibold tracking-wide uppercase\">{step.id}</span>\n                    <span className=\"text-sm font-medium\">{step.name}</span>\n                </a>\n                ) : (\n                <a\n                    href={step.href}\n                    className=\"group pl-4 py-2 flex flex-col border-l-4 border-gray-200 hover:border-gray-300 md:pl-0 md:pt-4 md:pb-0 md:border-l-0 md:border-t-4\"\n                >\n                    <span className=\"text-xs text-gray-500 font-semibold tracking-wide uppercase group-hover:text-gray-700\">\n                    {step.id}\n                    </span>\n                    <span className=\"text-sm font-medium\">{step.name}</span>\n                </a>\n                )}\n            </li>\n            ))}\n        </ol>\n    </nav>\n  )\n}\n\nexport default Steps","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/text-input.component.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/image-upload.component.js",["244","245"],[],"import React, { useState, useEffect } from 'react'\n\nconst ImageUpload = ({ label, name, handleChange }) => {\n\n    const [images, setImages] = useState([]);\n    const [files, setFiles] = useState([]);\n    const [count, setCount] = useState(0);\n\n    function selectFile(e) {\n        const previewsData = {\n            id: count, previewImage: URL.createObjectURL(e.target.files[0])\n        }\n        const fileData = e.target.files[0];\n        setCount(count + 1);\n        setImages(prevImages => ([ ...prevImages, previewsData ]));\n        setFiles(prevFiles => ([...prevFiles, fileData]))\n    }\n\n    useEffect(() => {\n        handleChange({target: {name, value: files}});\n    }, [files]);\n\n  return (\n    <div className=\"sm:col-span-6\">\n        <label htmlFor=\"cover-photo\" className=\"block text-sm font-medium text-gray-700\">\n        {label}\n        </label>\n        <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n            <div className=\"space-y-1 text-center\">\n                <svg\n                className=\"mx-auto h-12 w-12 text-gray-400\"\n                stroke=\"currentColor\"\n                fill=\"none\"\n                viewBox=\"0 0 48 48\"\n                aria-hidden=\"true\"\n                >\n                <path\n                    d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n                    strokeWidth={2}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                />\n                </svg>\n                <div className=\"flex text-sm text-gray-600\">\n                <label\n                    htmlFor=\"file-upload\"\n                    className=\"relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500\"\n                >\n                    <span>Upload a file</span>\n                    <input onChange={ e => selectFile(e) } id=\"file-upload\" name={name} type=\"file\" accept='image/png, image/gif, image/jpeg, image/jpg' className=\"sr-only\" />\n                </label>\n                <p className=\"pl-1\">or drag and drop</p>\n                </div>\n                <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB</p>\n            </div>\n        </div>\n        <div className='max-w-7xl mx-auto mt-6 grid grid-cols-1 gap-y-10 gap-x-6 sm:grid-cols-2 lg:grid-cols-4 px-4 xl:gap-x-8 sm:px-8 lg:px-6'>\n            {images.map(img => (\n                <div key={img.id} className='w-full min-h-50 bg-gray-200 aspect-h-1 rounded-md overflow-hidden group-hover:opacity-75 lg:h-50 lg:aspect-none'>\n                    <img\n                        src={img.previewImage}\n                        className='w-full h-full object-center object-cover lg:w-full lg:h-full'\n                    />\n                </div>\n            ))}\n        </div>\n    </div>\n  )\n}\n\nexport default ImageUpload","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/price-input.component.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/products/products.enum.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/textarea.component.js",["246"],[],"import React, { useState, useEffect } from 'react';\n\nexport default function Textarea({ label, name, handleChange }) {\n\n  const [value, setValue] = useState('');\n\n  function setText(e) {\n    const { value } = e.target;\n    setValue(value);\n  }\n\n  useEffect(() => {\n    handleChange({target: {name, value: value}});\n  }, [value]);\n\n    return (\n      <div>\n        <label htmlFor=\"comment\" className=\"block text-sm font-medium text-gray-700\">\n          {label}\n        </label>\n        <div className=\"mt-1\">\n          <textarea\n            rows={4}\n            name={name}\n            id={name}\n            className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n            defaultValue={''}\n            onChange={e => setText(e)}\n          />\n        </div>\n      </div>\n    )\n  }  ","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/sizing-input.component.js",["247"],[],"import React, { useState, useEffect } from \"react\"\nimport PlainInput from \"./plain-input.component\"\n\nconst plans = [\n    {\n        id: 1,\n        name: 'Small',\n        sleeveLength: '',\n        bust: '',\n        waist: '',\n        hips: '',\n        length: '',\n        isCurrent: false,\n    },\n    {\n        id: 2,\n        name: 'Medium',\n        sleeveLength: '',\n        bust: '',\n        waist: '',\n        hips: '',\n        length: '',\n    },\n    {\n        id: 3,\n        name: 'Large',\n        sleeveLength: '',\n        bust: '',\n        waist: '',\n        hips: '',\n        length: '',\n    },\n  ]\n  \n  function classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n  }\n  \n  export default function SizingTable({ name, productSizes, handleChange }) {\n\n    const [sizes, setSizes] = useState({\n        Small: {\n            sleeveLength: '',\n            bust: '',\n            waist: '',\n            hips: '',\n            length: '',\n        },\n        Medium: {\n            sleeveLength: '',\n            bust: '',\n            waist: '',\n            hips: '',\n            length: '',\n        },\n        Large: {\n            sleeveLength: '',\n            bust: '',\n            waist: '',\n            hips: '',\n            length: '',\n        },\n    })\n\n    function selectSize(e) {\n      const { name, id, value } = e.target;\n      setSizes(prevValues => ({\n        ...prevValues,\n        [name]: {\n          ...prevValues[name],\n          [id]: value\n        }\n      }))\n      }\n\n    useEffect(() => {\n        handleChange({target: {name, value: sizes}});\n    }, [sizes]);\n\n    return (\n      <div className=\"mt-4 mb-8 px-4 sm:px-6 lg:px-8\">\n        <div className=\"sm:flex sm:items-center\">\n          <div className=\"sm:flex-auto\">\n            <h1 className=\"text-xl font-semibold text-gray-900\">Sizing Reference</h1>\n            <p className=\"mt-2 text-sm text-gray-700\">\n              Change the sizing reference of the product, if needed.\n            </p>\n          </div>\n        </div>\n        <div className=\"-mx-4 mt-10 ring-1 ring-gray-300 sm:-mx-6 md:mx-0 md:rounded-lg\">\n          <table className=\"min-w-full divide-y divide-gray-300\">\n            <thead>\n              <tr>\n                <th scope=\"col\" className=\"py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-500 sm:pl-6\">\n                  Size\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"hidden px-3 py-3.5 text-left text-sm font-semibold text-gray-500 lg:table-cell\"\n                >\n                  Sleeve Length\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"hidden px-3 py-3.5 text-left text-sm font-semibold text-gray-500 lg:table-cell\"\n                >\n                  Bust\n                </th>\n                <th\n                  scope=\"col\"\n                  className=\"hidden px-3 py-3.5 text-left text-sm font-semibold text-gray-500 lg:table-cell\"\n                >\n                  Waist\n                </th>\n                <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-500\">\n                  Hips\n                </th>\n                <th scope=\"col\" className=\"px-3 py-3.5 text-left text-sm font-semibold text-gray-500\">\n                  Length\n                </th>\n                <th scope=\"col\" className=\"relative py-3.5 pl-3 pr-4 sm:pr-6\">\n                  <span className=\"sr-only\">Select</span>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {plans.map((plan, planIdx) => (\n                <tr key={plan.id}>\n                  <td\n                    className={classNames(\n                      planIdx === 0 ? '' : 'border-t border-transparent',\n                      'relative py-4 pl-4 sm:pl-6 pr-3 text-sm'\n                    )}\n                  >\n                    <div className=\"font-medium text-gray-900\">\n                      {plan.name}\n                    </div>\n                    <div className=\"mt-1 flex flex-col text-gray-900 sm:block lg:hidden\">\n                      <span>\n                        {plan.sleeveLength} / {plan.bust}\n                      </span>\n                      <span className=\"hidden sm:inline\"> · </span>\n                      <span>{plan.hips}</span>\n                    </div>\n                    {planIdx !== 0 ? <div className=\"absolute right-0 left-6 -top-px h-px bg-gray-200\" /> : null}\n                  </td>\n                  <td\n                    className={classNames(\n                      planIdx === 0 ? '' : 'border-t border-gray-200',\n                      'hidden px-3 py-3.5 text-sm text-gray-900 lg:table-cell'\n                    )}\n                  >\n                    <PlainInput handleChange={e => selectSize(e)} name={plan.name} id={'sleeveLength'} value={plan.sleeveLength} />\n                  </td>\n                  <td\n                    className={classNames(\n                      planIdx === 0 ? '' : 'border-t border-gray-200',\n                      'hidden px-3 py-3.5 text-sm text-gray-900 lg:table-cell'\n                    )}\n                  >\n                    <PlainInput handleChange={e => selectSize(e)} name={plan.name} id={'bust'} value={plan.bust} />\n                  </td>\n                  <td\n                    className={classNames(\n                      planIdx === 0 ? '' : 'border-t border-gray-200',\n                      'hidden px-3 py-3.5 text-sm text-gray-900 lg:table-cell'\n                    )}\n                  >\n                    <PlainInput handleChange={e => selectSize(e)} name={plan.name} id={'waist'} value={plan.waist} />\n                  </td>\n                  <td\n                    className={classNames(\n                      planIdx === 0 ? '' : 'border-t border-gray-200',\n                      'px-3 py-3.5 text-sm text-gray-900'\n                    )}\n                  >\n                    <PlainInput handleChange={e => selectSize(e)} name={plan.name} id={'hips'} value={plan.hips} />\n                  </td>\n                  <td\n                    className={classNames(\n                      planIdx === 0 ? '' : 'border-t border-gray-200',\n                      'px-3 py-3.5 text-sm text-gray-900'\n                    )}\n                  >\n                    <PlainInput handleChange={e => selectSize(e)} name={plan.name} id={'length'} value={plan.length} />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }  ","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/plain-input.component.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/checkboxes.component.js",["248"],[],"import React, { useState, useEffect } from 'react'\n\nconst sizes = [\n    { id: 0, val: 'XX Small', size: 'XXS', checked: false },\n    { id: 1, val: 'X Small', size: 'XS', checked: false },\n    { id: 2, val: 'Small', size: 'S', checked: true },\n    { id: 3, val: 'Medium', size: 'M', checked: true },\n    { id: 4, val: 'Large', size: 'L', checked: true },\n    { id: 5, val: 'X Large', size: 'XL', checked: false },\n    { id: 6, val: 'XX Large', size: 'XXL', checked: false },\n]\n\nexport default function Checkboxes({ name, handleChange }) {\n\n    const [values, setValues] = useState(sizes);\n\n    function selectSize(position) {\n        console.log(position);\n        const newValues = values.map(obj => {\n            if (obj.id === position) {\n                if (obj.checked === true) {\n                    obj.checked = false;\n                } else {\n                    obj.checked = true;\n                }\n                return obj;\n            }\n            return obj;\n        })\n        setValues(newValues);\n    }\n\n    useEffect(() => {\n        handleChange({target: {name, value: values}})\n    }, [values])\n\n    return (\n      <fieldset className=\"space-y-5 px-12 mt-10 mb-10\">\n          <h1 className=\"text-xl font-semibold text-gray-900\">Sizes</h1>\n        {sizes.map((item) => (\n        <div key={item.id} className=\"relative flex items-start\">\n            <div className=\"flex items-center h-5\">\n                <input\n                aria-describedby=\"comments-description\"\n                name={item.val}\n                type=\"checkbox\"\n                className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                value={JSON.stringify(item)}\n                checked={item.checked}\n                onChange={() => selectSize(item.id)}\n                />\n            </div>\n            <div className=\"ml-3 text-sm\">\n                <label htmlFor=\"comments\" className=\"font-medium text-gray-700\">\n                {item.val}\n                </label>\n            </div>\n        </div>\n        ))}\n      </fieldset>\n    )\n  }  ","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/number-input.component.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/forms/website-input.component.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/product-overview/product.page.js",["249","250","251","252","253","254","255"],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/redux/store.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/redux/reducer.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/redux/actions.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/category/category.page.js",["256","257"],[],"import { Fragment, useState, useEffect } from 'react'\nimport { Dialog, Disclosure, Menu, Transition } from '@headlessui/react'\nimport { XIcon } from '@heroicons/react/outline'\nimport { ChevronDownIcon, FilterIcon, MinusSmIcon, PlusSmIcon, ViewGridIcon } from '@heroicons/react/solid'\nimport Products from '../../components/products/products.component'\nimport { useParams } from 'react-router-dom'\n\nconst sortOptions = [\n  { name: 'Most Popular', href: '#', current: true },\n  { name: 'Best Rating', href: '#', current: false },\n  { name: 'Newest', href: '#', current: false },\n  { name: 'Price: Low to High', href: '#', current: false },\n  { name: 'Price: High to Low', href: '#', current: false },\n]\nconst subCategories = [\n  { name: 'Totes', href: '#' },\n  { name: 'Backpacks', href: '#' },\n  { name: 'Travel Bags', href: '#' },\n  { name: 'Hip Bags', href: '#' },\n  { name: 'Laptop Sleeves', href: '#' },\n]\nconst filters = [\n  {\n    id: 'color',\n    name: 'Color',\n    options: [\n      { value: 'White', label: 'White', checked: false },\n      { value: 'Beige', label: 'Beige', checked: false },\n      { value: 'Blue', label: 'Blue', checked: false },\n      { value: 'Brown', label: 'Brown', checked: false },\n      { value: 'Green', label: 'Green', checked: false },\n      { value: 'Purple', label: 'Purple', checked: false },\n    ],\n  },\n  {\n    id: 'category',\n    name: 'Category',\n    options: [\n      { value: 'new-arrivals', label: 'New Arrivals', checked: false },\n      { value: 'sale', label: 'Sale', checked: false },\n      { value: 'travel', label: 'Travel', checked: false },\n      { value: 'organization', label: 'Organization', checked: false },\n      { value: 'accessories', label: 'Accessories', checked: false },\n    ],\n  },\n  {\n    id: 'fabric',\n    name: 'Fabric',\n    options: [\n      { value: 'new-arrivals', label: 'New Arrivals', checked: false },\n      { value: 'sale', label: 'Sale', checked: false },\n      { value: 'travel', label: 'Travel', checked: false },\n      { value: 'organization', label: 'Organization', checked: false },\n      { value: 'accessories', label: 'Accessories', checked: false },\n    ],\n  },\n  {\n    id: 'size',\n    name: 'Size',\n    options: [\n      { value: 'XXS', label: 'XXS', checked: false },\n      { value: 'XS', label: 'XS', checked: false },\n      { value: 'S', label: 'S', checked: false },\n      { value: 'M', label: 'M', checked: false },\n      { value: 'L', label: 'L', checked: false },\n      { value: 'XL', label: 'XL', checked: false },\n      { value: 'XXL', label: 'XXL', checked: false },\n    ],\n  },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function CategoryPage() {\n  const [mobileFiltersOpen, setMobileFiltersOpen] = useState(false)\n\n  const [products, setProducts] = useState([]);\n  let { category } = useParams();\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/api/products/category/${category}`, {\n      method: 'GET',\n    })\n    .then(res => res.json())\n    .then(data => {\n      setProducts(data);\n    })\n  }, [category]);\n\n  return (\n    <div className=\"bg-white\">\n      <div>\n        {/* Mobile filter dialog */}\n        <Transition.Root show={mobileFiltersOpen} as={Fragment}>\n          <Dialog as=\"div\" className=\"relative z-40 lg:hidden\" onClose={setMobileFiltersOpen}>\n            <Transition.Child\n              as={Fragment}\n              enter=\"transition-opacity ease-linear duration-300\"\n              enterFrom=\"opacity-0\"\n              enterTo=\"opacity-100\"\n              leave=\"transition-opacity ease-linear duration-300\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\n            </Transition.Child>\n\n            <div className=\"fixed inset-0 flex z-40\">\n              <Transition.Child\n                as={Fragment}\n                enter=\"transition ease-in-out duration-300 transform\"\n                enterFrom=\"translate-x-full\"\n                enterTo=\"translate-x-0\"\n                leave=\"transition ease-in-out duration-300 transform\"\n                leaveFrom=\"translate-x-0\"\n                leaveTo=\"translate-x-full\"\n              >\n                <Dialog.Panel className=\"ml-auto relative max-w-xs w-full h-full bg-white shadow-xl py-4 pb-12 flex flex-col overflow-y-auto\">\n                  <div className=\"px-4 flex items-center justify-between\">\n                    <h2 className=\"text-lg font-medium text-gray-900\">Filters</h2>\n                    <button\n                      type=\"button\"\n                      className=\"-mr-2 w-10 h-10 bg-white p-2 rounded-md flex items-center justify-center text-gray-400\"\n                      onClick={() => setMobileFiltersOpen(false)}\n                    >\n                      <span className=\"sr-only\">Close menu</span>\n                      <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n\n                  {/* Filters */}\n                  <form className=\"mt-4 border-t border-gray-200\">\n                    <h3 className=\"sr-only\">Categories</h3>\n                    <ul role=\"list\" className=\"font-medium text-gray-900 px-2 py-3\">\n                      {subCategories.map((category) => (\n                        <li key={category.name}>\n                          <a href={category.href} className=\"block px-2 py-3\">\n                            {category.name}\n                          </a>\n                        </li>\n                      ))}\n                    </ul>\n\n                    {filters.map((section) => (\n                      <Disclosure as=\"div\" key={section.id} className=\"border-t border-gray-200 px-4 py-6\">\n                        {({ open }) => (\n                          <>\n                            <h3 className=\"-mx-2 -my-3 flow-root\">\n                              <Disclosure.Button className=\"px-2 py-3 bg-white w-full flex items-center justify-between text-gray-400 hover:text-gray-500\">\n                                <span className=\"font-medium text-gray-900\">{section.name}</span>\n                                <span className=\"ml-6 flex items-center\">\n                                  {open ? (\n                                    <MinusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                  ) : (\n                                    <PlusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                  )}\n                                </span>\n                              </Disclosure.Button>\n                            </h3>\n                            <Disclosure.Panel className=\"pt-6\">\n                              <div className=\"space-y-6\">\n                                {section.options.map((option, optionIdx) => (\n                                  <div key={option.value} className=\"flex items-center\">\n                                    <input\n                                      id={`filter-mobile-${section.id}-${optionIdx}`}\n                                      name={`${section.id}[]`}\n                                      defaultValue={option.value}\n                                      type=\"checkbox\"\n                                      defaultChecked={option.checked}\n                                      className=\"h-4 w-4 border-gray-300 rounded text-indigo-600 focus:ring-indigo-500\"\n                                    />\n                                    <label\n                                      htmlFor={`filter-mobile-${section.id}-${optionIdx}`}\n                                      className=\"ml-3 min-w-0 flex-1 text-gray-500\"\n                                    >\n                                      {option.label}\n                                    </label>\n                                  </div>\n                                ))}\n                              </div>\n                            </Disclosure.Panel>\n                          </>\n                        )}\n                      </Disclosure>\n                    ))}\n                  </form>\n                </Dialog.Panel>\n              </Transition.Child>\n            </div>\n          </Dialog>\n        </Transition.Root>\n\n        <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"relative z-10 flex items-baseline justify-between pt-8 pb-6 border-b border-gray-200\">\n            <h1 className=\"text-4xl font-normal tracking-tight text-gray-900\">{category}</h1>\n\n            <div className=\"flex items-center\">\n              <Menu as=\"div\" className=\"relative inline-block text-left\">\n                <div>\n                  <Menu.Button className=\"group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900\">\n                    Sort\n                    <ChevronDownIcon\n                      className=\"flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                  </Menu.Button>\n                </div>\n\n                <Transition\n                  as={Fragment}\n                  enter=\"transition ease-out duration-100\"\n                  enterFrom=\"transform opacity-0 scale-95\"\n                  enterTo=\"transform opacity-100 scale-100\"\n                  leave=\"transition ease-in duration-75\"\n                  leaveFrom=\"transform opacity-100 scale-100\"\n                  leaveTo=\"transform opacity-0 scale-95\"\n                >\n                  <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-40 rounded-md shadow-2xl bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                    <div className=\"py-1\">\n                      {sortOptions.map((option) => (\n                        <Menu.Item key={option.name}>\n                          {({ active }) => (\n                            <a\n                              href={option.href}\n                              className={classNames(\n                                option.current ? 'font-medium text-gray-900' : 'text-gray-500',\n                                active ? 'bg-gray-100' : '',\n                                'block px-4 py-2 text-sm'\n                              )}\n                            >\n                              {option.name}\n                            </a>\n                          )}\n                        </Menu.Item>\n                      ))}\n                    </div>\n                  </Menu.Items>\n                </Transition>\n              </Menu>\n\n              <button type=\"button\" className=\"p-2 -m-2 ml-5 sm:ml-7 text-gray-400 hover:text-gray-500\">\n                <span className=\"sr-only\">View grid</span>\n                <ViewGridIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n              </button>\n              <button\n                type=\"button\"\n                className=\"p-2 -m-2 ml-4 sm:ml-6 text-gray-400 hover:text-gray-500 lg:hidden\"\n                onClick={() => setMobileFiltersOpen(true)}\n              >\n                <span className=\"sr-only\">Filters</span>\n                <FilterIcon className=\"w-5 h-5\" aria-hidden=\"true\" />\n              </button>\n            </div>\n          </div>\n\n          <section aria-labelledby=\"products-heading\" className=\"pt-6 pb-24\">\n            <h2 id=\"products-heading\" className=\"sr-only\">\n              Products\n            </h2>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-x-8 gap-y-10\">\n              {/* Filters */}\n              <form className=\"hidden lg:block\">\n                <h3 className=\"sr-only\">Categories</h3>\n                <ul role=\"list\" className=\"text-sm font-medium text-gray-900 space-y-4 pb-6 border-b border-gray-200\">\n                  {subCategories.map((category) => (\n                    <li key={category.name}>\n                      <a href={category.href}>{category.name}</a>\n                    </li>\n                  ))}\n                </ul>\n\n                {filters.map((section) => (\n                  <Disclosure as=\"div\" key={section.id} className=\"border-b border-gray-200 py-6\">\n                    {({ open }) => (\n                      <>\n                        <h3 className=\"-my-3 flow-root\">\n                          <Disclosure.Button className=\"py-3 bg-white w-full flex items-center justify-between text-sm text-gray-400 hover:text-gray-500\">\n                            <span className=\"font-medium text-gray-900\">{section.name}</span>\n                            <span className=\"ml-6 flex items-center\">\n                              {open ? (\n                                <MinusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                              ) : (\n                                <PlusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                              )}\n                            </span>\n                          </Disclosure.Button>\n                        </h3>\n                        <Disclosure.Panel className=\"pt-6\">\n                          <div className=\"space-y-4\">\n                            {section.options.map((option, optionIdx) => (\n                              <div key={option.value} className=\"flex items-center\">\n                                <input\n                                  id={`filter-${section.id}-${optionIdx}`}\n                                  name={`${section.id}[]`}\n                                  defaultValue={option.value}\n                                  type=\"checkbox\"\n                                  defaultChecked={option.checked}\n                                  className=\"h-4 w-4 border-gray-300 rounded text-indigo-600 focus:ring-indigo-500\"\n                                />\n                                <label\n                                  htmlFor={`filter-${section.id}-${optionIdx}`}\n                                  className=\"ml-3 text-sm text-gray-600\"\n                                >\n                                  {option.label}\n                                </label>\n                              </div>\n                            ))}\n                          </div>\n                        </Disclosure.Panel>\n                      </>\n                    )}\n                  </Disclosure>\n                ))}\n              </form>\n\n              {/* Product grid */}\n              <div className=\"lg:col-span-3\">\n                {/* Replace with your content */}\n                <Products numberOfColumns={'3'} products={products} />\n                {/* /End replace */}\n              </div>\n            </div>\n          </section>\n        </main>\n      </div>\n    </div>\n  )\n}","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/checkout/checkout-form.component.js",["258","259"],[],"import { useEffect, useState } from 'react'\nimport { RadioGroup } from '@headlessui/react'\nimport { CheckCircleIcon, TrashIcon } from '@heroicons/react/solid'\n\nimport { useSelector } from 'react-redux'\n\nconst deliveryMethods = [\n  { id: 1, title: 'Standard', turnaround: '4–10 business days', price: '5.00' },\n  { id: 2, title: 'Express', turnaround: '2–5 business days', price: '16.00' },\n]\nconst paymentMethods = [\n  { id: 'credit-card', title: 'Credit card' },\n  { id: 'paypal', title: 'PayPal' },\n  { id: 'etransfer', title: 'eTransfer' },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function CheckoutPage() {\n  const [selectedDeliveryMethod, setSelectedDeliveryMethod] = useState(deliveryMethods[0])\n  const [subtotal, setSubtotal] = useState(0);\n  const [shipping, setShipping] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  const cart = useSelector(state => state.cart.value);\n\n  useEffect(() => {\n    let subTotal = 0;\n    cart.forEach(item => {\n      subTotal += parseFloat(item.product.price);\n    })\n    setSubtotal(subTotal);\n    setShipping(selectedDeliveryMethod.price);\n    let total = subTotal + parseFloat(selectedDeliveryMethod.price);\n    setTotal(total);\n  }, [cart, selectedDeliveryMethod, subtotal, shipping, total]);\n\n  return (\n    <div className=\"bg-gray-50\">\n      <div className=\"max-w-2xl mx-auto pt-16 pb-24 px-4 sm:px-6 lg:max-w-7xl lg:px-8\">\n        <h2 className=\"sr-only\">Checkout</h2>\n\n        <form className=\"lg:grid lg:grid-cols-2 lg:gap-x-12 xl:gap-x-16\">\n          <div>\n            <div>\n              <h2 className=\"text-lg font-medium text-gray-900\">Contact information</h2>\n\n              <div className=\"mt-4\">\n                <label htmlFor=\"email-address\" className=\"block text-sm font-medium text-gray-700\">\n                  Email address\n                </label>\n                <div className=\"mt-1\">\n                  <input\n                    type=\"email\"\n                    id=\"email-address\"\n                    name=\"email-address\"\n                    autoComplete=\"email\"\n                    className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mt-10 border-t border-gray-200 pt-10\">\n              <h2 className=\"text-lg font-medium text-gray-900\">Shipping information</h2>\n\n              <div className=\"mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4\">\n                <div>\n                  <label htmlFor=\"first-name\" className=\"block text-sm font-medium text-gray-700\">\n                    First name\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      id=\"first-name\"\n                      name=\"first-name\"\n                      autoComplete=\"given-name\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"last-name\" className=\"block text-sm font-medium text-gray-700\">\n                    Last name\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      id=\"last-name\"\n                      name=\"last-name\"\n                      autoComplete=\"family-name\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"sm:col-span-2\">\n                  <label htmlFor=\"company\" className=\"block text-sm font-medium text-gray-700\">\n                    Company\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      name=\"company\"\n                      id=\"company\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"sm:col-span-2\">\n                  <label htmlFor=\"address\" className=\"block text-sm font-medium text-gray-700\">\n                    Address\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      name=\"address\"\n                      id=\"address\"\n                      autoComplete=\"street-address\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"sm:col-span-2\">\n                  <label htmlFor=\"apartment\" className=\"block text-sm font-medium text-gray-700\">\n                    Apartment, suite, etc.\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      name=\"apartment\"\n                      id=\"apartment\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700\">\n                    City\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      name=\"city\"\n                      id=\"city\"\n                      autoComplete=\"address-level2\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700\">\n                    Country\n                  </label>\n                  <div className=\"mt-1\">\n                    <select\n                      id=\"country\"\n                      name=\"country\"\n                      autoComplete=\"country-name\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    >\n                      <option>United States</option>\n                      <option>Canada</option>\n                      <option>Mexico</option>\n                    </select>\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"region\" className=\"block text-sm font-medium text-gray-700\">\n                    State / Province\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      name=\"region\"\n                      id=\"region\"\n                      autoComplete=\"address-level1\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"postal-code\" className=\"block text-sm font-medium text-gray-700\">\n                    Postal code\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      name=\"postal-code\"\n                      id=\"postal-code\"\n                      autoComplete=\"postal-code\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"sm:col-span-2\">\n                  <label htmlFor=\"phone\" className=\"block text-sm font-medium text-gray-700\">\n                    Phone\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      name=\"phone\"\n                      id=\"phone\"\n                      autoComplete=\"tel\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mt-10 border-t border-gray-200 pt-10\">\n              <RadioGroup value={selectedDeliveryMethod} onChange={setSelectedDeliveryMethod}>\n                <RadioGroup.Label className=\"text-lg font-medium text-gray-900\">Delivery method</RadioGroup.Label>\n\n                <div className=\"mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4\">\n                  {deliveryMethods.map((deliveryMethod) => (\n                    <RadioGroup.Option\n                      key={deliveryMethod.id}\n                      value={deliveryMethod}\n                      className={({ checked, active }) =>\n                        classNames(\n                          checked ? 'border-transparent' : 'border-gray-300',\n                          active ? 'ring-2 ring-indigo-500' : '',\n                          'relative bg-white border rounded-lg shadow-sm p-4 flex cursor-pointer focus:outline-none'\n                        )\n                      }\n                    >\n                      {({ checked, active }) => (\n                        <>\n                          <span className=\"flex-1 flex\">\n                            <span className=\"flex flex-col\">\n                              <RadioGroup.Label as=\"span\" className=\"block text-sm font-medium text-gray-900\">\n                                {deliveryMethod.title}\n                              </RadioGroup.Label>\n                              <RadioGroup.Description\n                                as=\"span\"\n                                className=\"mt-1 flex items-center text-sm text-gray-500\"\n                              >\n                                {deliveryMethod.turnaround}\n                              </RadioGroup.Description>\n                              <RadioGroup.Description as=\"span\" className=\"mt-6 text-sm font-medium text-gray-900\">\n                                {deliveryMethod.price}\n                              </RadioGroup.Description>\n                            </span>\n                          </span>\n                          {checked ? <CheckCircleIcon className=\"h-5 w-5 text-indigo-600\" aria-hidden=\"true\" /> : null}\n                          <span\n                            className={classNames(\n                              active ? 'border' : 'border-2',\n                              checked ? 'border-indigo-500' : 'border-transparent',\n                              'absolute -inset-px rounded-lg pointer-events-none'\n                            )}\n                            aria-hidden=\"true\"\n                          />\n                        </>\n                      )}\n                    </RadioGroup.Option>\n                  ))}\n                </div>\n              </RadioGroup>\n            </div>\n\n            {/* Payment */}\n            <div className=\"mt-10 border-t border-gray-200 pt-10\">\n              <h2 className=\"text-lg font-medium text-gray-900\">Payment</h2>\n\n              <fieldset className=\"mt-4\">\n                <legend className=\"sr-only\">Payment type</legend>\n                <div className=\"space-y-4 sm:flex sm:items-center sm:space-y-0 sm:space-x-10\">\n                  {paymentMethods.map((paymentMethod, paymentMethodIdx) => (\n                    <div key={paymentMethod.id} className=\"flex items-center\">\n                      {paymentMethodIdx === 0 ? (\n                        <input\n                          id={paymentMethod.id}\n                          name=\"payment-type\"\n                          type=\"radio\"\n                          defaultChecked\n                          className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n                        />\n                      ) : (\n                        <input\n                          id={paymentMethod.id}\n                          name=\"payment-type\"\n                          type=\"radio\"\n                          className=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300\"\n                        />\n                      )}\n\n                      <label htmlFor={paymentMethod.id} className=\"ml-3 block text-sm font-medium text-gray-700\">\n                        {paymentMethod.title}\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              </fieldset>\n\n              <div className=\"mt-6 grid grid-cols-4 gap-y-6 gap-x-4\">\n                <div className=\"col-span-4\">\n                  <label htmlFor=\"card-number\" className=\"block text-sm font-medium text-gray-700\">\n                    Card number\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      id=\"card-number\"\n                      name=\"card-number\"\n                      autoComplete=\"cc-number\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-span-4\">\n                  <label htmlFor=\"name-on-card\" className=\"block text-sm font-medium text-gray-700\">\n                    Name on card\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      id=\"name-on-card\"\n                      name=\"name-on-card\"\n                      autoComplete=\"cc-name\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-span-3\">\n                  <label htmlFor=\"expiration-date\" className=\"block text-sm font-medium text-gray-700\">\n                    Expiration date (MM/YY)\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      name=\"expiration-date\"\n                      id=\"expiration-date\"\n                      autoComplete=\"cc-exp\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label htmlFor=\"cvc\" className=\"block text-sm font-medium text-gray-700\">\n                    CVC\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      name=\"cvc\"\n                      id=\"cvc\"\n                      autoComplete=\"csc\"\n                      className=\"block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Order summary */}\n          <div className=\"mt-10 lg:mt-0\">\n            <h2 className=\"text-lg font-medium text-gray-900\">Order summary</h2>\n\n            <div className=\"mt-4 bg-white border border-gray-200 rounded-lg shadow-sm\">\n              <h3 className=\"sr-only\">Items in your cart</h3>\n              <ul role=\"list\" className=\"divide-y divide-gray-200\">\n                {cart.map((item) => (\n                  <li key={item.product._id} className=\"flex py-6 px-4 sm:px-6\">\n                    <div className=\"flex-shrink-0\">\n                      <img src={`http://localhost:3000/api/images/${item.product.images[0]}`} className=\"w-20 rounded-md\" />\n                    </div>\n\n                    <div className=\"ml-6 flex-1 flex flex-col\">\n                      <div className=\"flex\">\n                        <div className=\"min-w-0 flex-1\">\n                          <h4 className=\"text-sm\">\n                            <a href={item.product.href} className=\"font-medium text-gray-700 hover:text-gray-800\">\n                              {item.product.name}\n                            </a>\n                          </h4>\n                          <p className=\"mt-1 text-sm text-gray-500\">{item.product.colour}</p>\n                          <p className=\"mt-1 text-sm text-gray-500\">{item.product.size}</p>\n                        </div>\n\n                        <div className=\"ml-4 flex-shrink-0 flow-root\">\n                          <button\n                            type=\"button\"\n                            className=\"-m-2.5 bg-white p-2.5 flex items-center justify-center text-gray-400 hover:text-gray-500\"\n                          >\n                            <span className=\"sr-only\">Remove</span>\n                            <TrashIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          </button>\n                        </div>\n                      </div>\n\n                      <div className=\"flex-1 pt-2 flex items-end justify-between\">\n                        <p className=\"mt-1 text-sm font-medium text-gray-900\">£{item.product.price}</p>\n\n                        <div className=\"ml-4\">\n                          <label htmlFor=\"quantity\" className=\"sr-only\">\n                            Quantity\n                          </label>\n                          <select\n                            id=\"quantity\"\n                            name=\"quantity\"\n                            className=\"rounded-md border border-gray-300 text-base font-medium text-gray-700 text-left shadow-sm focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                          >\n                            <option value={1}>1</option>\n                            <option value={2}>2</option>\n                            <option value={3}>3</option>\n                            <option value={4}>4</option>\n                            <option value={5}>5</option>\n                            <option value={6}>6</option>\n                            <option value={7}>7</option>\n                            <option value={8}>8</option>\n                            <option value={9}>9</option>\n                            <option value={10}>10</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n              <dl className=\"border-t border-gray-200 py-6 px-4 space-y-6 sm:px-6\">\n                <div className=\"flex items-center justify-between\">\n                  <dt className=\"text-sm\">Subtotal</dt>\n                  <dd className=\"text-sm font-medium text-gray-900\">£{subtotal}</dd>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <dt className=\"text-sm\">Shipping</dt>\n                  <dd className=\"text-sm font-medium text-gray-900\">£{shipping}</dd>\n                </div>\n                <div className=\"flex items-center justify-between border-t border-gray-200 pt-6\">\n                  <dt className=\"text-base font-medium\">Total</dt>\n                  <dd className=\"text-base font-medium text-gray-900\">£{total}</dd>\n                </div>\n              </dl>\n\n              <div className=\"border-t border-gray-200 py-6 px-4 sm:px-6\">\n                <button\n                  type=\"submit\"\n                  className=\"w-full bg-indigo-600 border border-transparent rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-indigo-500\"\n                >\n                  Confirm order\n                </button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/admin-dashboard/components/transactions.component.js",["260"],[],"/* This example requires Tailwind CSS v2.0+ */\nconst transactions = [\n    {\n      id: 'AAPS0L',\n      company: 'Chase & Co.',\n      share: 'CAC',\n      commission: '+$4.37',\n      price: '$3,509.00',\n      quantity: '12.00',\n      netAmount: '$4,397.00',\n    },\n    // More transactions...\n  ]\n  \n  export default function TransactionsTable() {\n    return (\n      <div className=\"px-4 mt-6 sm:px-2 lg:px-4\">\n        <div className=\"sm:flex sm:items-center\">\n          <div className=\"sm:flex-auto\">\n            <h1 className=\"text-xl font-semibold text-gray-900\">Transactions</h1>\n            <p className=\"mt-2 text-sm text-gray-700\">\n              A table of placeholder stock market data that does not make any sense.\n            </p>\n          </div>\n          <div className=\"mt-4 sm:mt-0 sm:ml-16 sm:flex-none\">\n            <button\n              type=\"button\"\n              className=\"inline-flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:w-auto\"\n            >\n              Export\n            </button>\n          </div>\n        </div>\n        <div className=\"mt-8 flex flex-col\">\n          <div className=\"-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n            <div className=\"inline-block min-w-full py-2 align-middle md:px-6 lg:px-8\">\n              <div className=\"overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg\">\n                <table className=\"min-w-full divide-y divide-gray-300\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th\n                        scope=\"col\"\n                        className=\"whitespace-nowrap py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6\"\n                      >\n                        Transaction ID\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                      >\n                        Company\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                      >\n                        Share\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                      >\n                        Commision\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                      >\n                        Price\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                      >\n                        Quantity\n                      </th>\n                      <th\n                        scope=\"col\"\n                        className=\"whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900\"\n                      >\n                        Net amount\n                      </th>\n                      <th scope=\"col\" className=\"relative whitespace-nowrap py-3.5 pl-3 pr-4 sm:pr-6\">\n                        <span className=\"sr-only\">Edit</span>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"divide-y divide-gray-200 bg-white\">\n                    {transactions.map((transaction) => (\n                      <tr key={transaction.id}>\n                        <td className=\"whitespace-nowrap py-2 pl-4 pr-3 text-sm text-gray-500 sm:pl-6\">\n                          {transaction.id}\n                        </td>\n                        <td className=\"whitespace-nowrap px-2 py-2 text-sm font-medium text-gray-900\">\n                          {transaction.company}\n                        </td>\n                        <td className=\"whitespace-nowrap px-2 py-2 text-sm text-gray-900\">{transaction.share}</td>\n                        <td className=\"whitespace-nowrap px-2 py-2 text-sm text-gray-500\">{transaction.commission}</td>\n                        <td className=\"whitespace-nowrap px-2 py-2 text-sm text-gray-500\">{transaction.price}</td>\n                        <td className=\"whitespace-nowrap px-2 py-2 text-sm text-gray-500\">{transaction.quantity}</td>\n                        <td className=\"whitespace-nowrap px-2 py-2 text-sm text-gray-500\">{transaction.netAmount}</td>\n                        <td className=\"relative whitespace-nowrap py-2 pl-3 pr-4 text-right text-sm font-medium sm:pr-6\">\n                          <a href=\"#\" className=\"text-indigo-600 hover:text-indigo-900\">\n                            Edit<span className=\"sr-only\">, {transaction.id}</span>\n                          </a>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }  ","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/footer/footer.component.js",["261","262","263","264"],[],"const navigation = {\n    solutions: [\n      { name: 'Marketing', href: '#' },\n      { name: 'Analytics', href: '#' },\n      { name: 'Commerce', href: '#' },\n      { name: 'Insights', href: '#' },\n    ],\n    support: [\n      { name: 'Pricing', href: '#' },\n      { name: 'Documentation', href: '#' },\n      { name: 'Guides', href: '#' },\n      { name: 'API Status', href: '#' },\n    ],\n    company: [\n      { name: 'About', href: '#' },\n      { name: 'Blog', href: '#' },\n      { name: 'Jobs', href: '#' },\n      { name: 'Press', href: '#' },\n      { name: 'Partners', href: '#' },\n    ],\n    legal: [\n      { name: 'Claim', href: '#' },\n      { name: 'Privacy', href: '#' },\n      { name: 'Terms', href: '#' },\n    ],\n    social: [\n      {\n        name: 'Facebook',\n        href: '#',\n        icon: (props) => (\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n            <path\n              fillRule=\"evenodd\"\n              d=\"M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        ),\n      },\n      {\n        name: 'Instagram',\n        href: '#',\n        icon: (props) => (\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n            <path\n              fillRule=\"evenodd\"\n              d=\"M12.315 2c2.43 0 2.784.013 3.808.06 1.064.049 1.791.218 2.427.465a4.902 4.902 0 011.772 1.153 4.902 4.902 0 011.153 1.772c.247.636.416 1.363.465 2.427.048 1.067.06 1.407.06 4.123v.08c0 2.643-.012 2.987-.06 4.043-.049 1.064-.218 1.791-.465 2.427a4.902 4.902 0 01-1.153 1.772 4.902 4.902 0 01-1.772 1.153c-.636.247-1.363.416-2.427.465-1.067.048-1.407.06-4.123.06h-.08c-2.643 0-2.987-.012-4.043-.06-1.064-.049-1.791-.218-2.427-.465a4.902 4.902 0 01-1.772-1.153 4.902 4.902 0 01-1.153-1.772c-.247-.636-.416-1.363-.465-2.427-.047-1.024-.06-1.379-.06-3.808v-.63c0-2.43.013-2.784.06-3.808.049-1.064.218-1.791.465-2.427a4.902 4.902 0 011.153-1.772A4.902 4.902 0 015.45 2.525c.636-.247 1.363-.416 2.427-.465C8.901 2.013 9.256 2 11.685 2h.63zm-.081 1.802h-.468c-2.456 0-2.784.011-3.807.058-.975.045-1.504.207-1.857.344-.467.182-.8.398-1.15.748-.35.35-.566.683-.748 1.15-.137.353-.3.882-.344 1.857-.047 1.023-.058 1.351-.058 3.807v.468c0 2.456.011 2.784.058 3.807.045.975.207 1.504.344 1.857.182.466.399.8.748 1.15.35.35.683.566 1.15.748.353.137.882.3 1.857.344 1.054.048 1.37.058 4.041.058h.08c2.597 0 2.917-.01 3.96-.058.976-.045 1.505-.207 1.858-.344.466-.182.8-.398 1.15-.748.35-.35.566-.683.748-1.15.137-.353.3-.882.344-1.857.048-1.055.058-1.37.058-4.041v-.08c0-2.597-.01-2.917-.058-3.96-.045-.976-.207-1.505-.344-1.858a3.097 3.097 0 00-.748-1.15 3.098 3.098 0 00-1.15-.748c-.353-.137-.882-.3-1.857-.344-1.023-.047-1.351-.058-3.807-.058zM12 6.865a5.135 5.135 0 110 10.27 5.135 5.135 0 010-10.27zm0 1.802a3.333 3.333 0 100 6.666 3.333 3.333 0 000-6.666zm5.338-3.205a1.2 1.2 0 110 2.4 1.2 1.2 0 010-2.4z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        ),\n      },\n      {\n        name: 'Twitter',\n        href: '#',\n        icon: (props) => (\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n            <path d=\"M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84\" />\n          </svg>\n        ),\n      },\n      {\n        name: 'GitHub',\n        href: '#',\n        icon: (props) => (\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n            <path\n              fillRule=\"evenodd\"\n              d=\"M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        ),\n      },\n      {\n        name: 'Dribbble',\n        href: '#',\n        icon: (props) => (\n          <svg fill=\"currentColor\" viewBox=\"0 0 24 24\" {...props}>\n            <path\n              fillRule=\"evenodd\"\n              d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10c5.51 0 10-4.48 10-10S17.51 2 12 2zm6.605 4.61a8.502 8.502 0 011.93 5.314c-.281-.054-3.101-.629-5.943-.271-.065-.141-.12-.293-.184-.445a25.416 25.416 0 00-.564-1.236c3.145-1.28 4.577-3.124 4.761-3.362zM12 3.475c2.17 0 4.154.813 5.662 2.148-.152.216-1.443 1.941-4.48 3.08-1.399-2.57-2.95-4.675-3.189-5A8.687 8.687 0 0112 3.475zm-3.633.803a53.896 53.896 0 013.167 4.935c-3.992 1.063-7.517 1.04-7.896 1.04a8.581 8.581 0 014.729-5.975zM3.453 12.01v-.26c.37.01 4.512.065 8.775-1.215.25.477.477.965.694 1.453-.109.033-.228.065-.336.098-4.404 1.42-6.747 5.303-6.942 5.629a8.522 8.522 0 01-2.19-5.705zM12 20.547a8.482 8.482 0 01-5.239-1.8c.152-.315 1.888-3.656 6.703-5.337.022-.01.033-.01.054-.022a35.318 35.318 0 011.823 6.475 8.4 8.4 0 01-3.341.684zm4.761-1.465c-.086-.52-.542-3.015-1.659-6.084 2.679-.423 5.022.271 5.314.369a8.468 8.468 0 01-3.655 5.715z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        ),\n      },\n    ],\n  }\n  \n  export default function Footer() {\n    return (\n      <footer className=\"bg-white\" aria-labelledby=\"footer-heading\">\n        <h2 id=\"footer-heading\" className=\"sr-only\">\n          Footer\n        </h2>\n        <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8\">\n          <div className=\"xl:grid xl:grid-cols-3 xl:gap-8\">\n            <div className=\"grid grid-cols-2 gap-8 xl:col-span-2\">\n              <div className=\"md:grid md:grid-cols-2 md:gap-8\">\n                <div>\n                  <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">Solutions</h3>\n                  <ul role=\"list\" className=\"mt-4 space-y-4\">\n                    {navigation.solutions.map((item) => (\n                      <li key={item.name}>\n                        <a href={item.href} className=\"text-base text-gray-500 hover:text-gray-900\">\n                          {item.name}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"mt-12 md:mt-0\">\n                  <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">Support</h3>\n                  <ul role=\"list\" className=\"mt-4 space-y-4\">\n                    {navigation.support.map((item) => (\n                      <li key={item.name}>\n                        <a href={item.href} className=\"text-base text-gray-500 hover:text-gray-900\">\n                          {item.name}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              <div className=\"md:grid md:grid-cols-2 md:gap-8\">\n                <div>\n                  <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">Company</h3>\n                  <ul role=\"list\" className=\"mt-4 space-y-4\">\n                    {navigation.company.map((item) => (\n                      <li key={item.name}>\n                        <a href={item.href} className=\"text-base text-gray-500 hover:text-gray-900\">\n                          {item.name}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"mt-12 md:mt-0\">\n                  <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">Legal</h3>\n                  <ul role=\"list\" className=\"mt-4 space-y-4\">\n                    {navigation.legal.map((item) => (\n                      <li key={item.name}>\n                        <a href={item.href} className=\"text-base text-gray-500 hover:text-gray-900\">\n                          {item.name}\n                        </a>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-8 xl:mt-0\">\n              <h3 className=\"text-sm font-semibold text-gray-400 tracking-wider uppercase\">\n                Subscribe to our newsletter\n              </h3>\n              <p className=\"mt-4 text-base text-gray-500\">\n                The latest news, articles, and resources, sent to your inbox weekly.\n              </p>\n              <form className=\"mt-4 sm:flex sm:max-w-md\">\n                <label htmlFor=\"email-address\" className=\"sr-only\">\n                  Email address\n                </label>\n                <input\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                  autoComplete=\"email\"\n                  required\n                  className=\"appearance-none min-w-0 w-full bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 text-base text-gray-900 placeholder-gray-500 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:placeholder-gray-400\"\n                  placeholder=\"Enter your email\"\n                />\n                <div className=\"mt-3 rounded-md sm:mt-0 sm:ml-3 sm:flex-shrink-0\">\n                  <button\n                    type=\"submit\"\n                    className=\"w-full bg-indigo-600 flex items-center justify-center border border-transparent rounded-md py-2 px-4 text-base font-medium text-white hover:bg-indigo-700 focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  >\n                    Subscribe\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"mt-8 border-t border-gray-200 pt-8 md:flex md:items-center md:justify-between\">\n            <div className=\"flex space-x-6 md:order-2\">\n              {navigation.social.map((item) => (\n                <a key={item.name} href={item.href} className=\"text-gray-400 hover:text-gray-500\">\n                  <span className=\"sr-only\">{item.name}</span>\n                  <item.icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </a>\n              ))}\n            </div>\n            <p className=\"mt-8 text-base text-gray-400 md:mt-0 md:order-1\">\n              &copy; 2020 Workflow, Inc. All rights reserved.\n            </p>\n          </div>\n        </div>\n      </footer>\n    )\n  }  ","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/user/user.page.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/components/navbar/search.component.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/user/sub-pages/user.account.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/user/sub-pages/rewards.account.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/user/sub-pages/orders.account.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/user/sub-pages/reviews.account.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/user/sub-pages/coupons.account.js",[],[],"/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/admin-dashboard/sub-pages/products.admin.js",["265","266","267","268","269","270","271","272"],[],"import React, { useState } from 'react'\nimport { StarIcon } from '@heroicons/react/solid'\nimport { RadioGroup } from '@headlessui/react'\n\nimport Tabs from '../../../components/navbar/tabs.component'\nimport Steps from '../../../components/navbar/steps.component'\nimport TextInput from '../../../components/forms/text-input.component'\nimport NumberInput from '../../../components/forms/number-input.component'\nimport WebsiteInput from '../../../components/forms/website-input.component'\nimport Textarea from '../../../components/forms/textarea.component'\nimport MultiPriceInput from '../../../components/forms/price-input.component'\nimport ImageUpload from '../../../components/forms/image-upload.component'\nimport Dropdown from '../../../components/forms/dropdown.component'\nimport Checkboxes from '../../../components/forms/checkboxes.component'\nimport SizingTable from '../../../components/forms/sizing-input.component'\nimport SwitchToggle from '../../../components/forms/switch.component'\n\nimport { useDispatch } from 'react-redux'\nimport { add } from '../../../redux/reducer'\n\nimport { gender, colours, categories, deliveryTime, season, fabric, fitting } from '../../../components/products/products.enum'\n\nconst tabs = [\n    { name: 'Create', href: '#', current: true },\n    { name: 'Read', href: '#', current: false },\n    { name: 'Update', href: '#', current: false },\n    { name: 'Delete', href: '#', current: false },\n]\n\nconst steps = [\n    { id: 'Step 1', name: 'Product Information', href: '#', status: 'current' },\n    { id: 'Step 2', name: 'Product Preview', href: '#', status: 'upcoming' },\n]\n\nconst reviews = { href: '#', average: 4, totalCount: 117 }\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nconst ProductsAdmin = () => {\n    const [product, setProduct] = useState({});\n    const [selectedColor, setSelectedColor] = useState(colours[0]);\n    const [selectedSize, setSelectedSize] = useState();\n    const [previewImages, setPreviewImages] = useState([]);\n\n    const dispatch = useDispatch();\n\n    const changeProduct = (event) => {\n        const { name, value } = event.target;\n        setProduct(prevValue => ({ ...prevValue, [name]: value }));\n    }\n\n    const [productInfo, setProductInfo] = useState(true);\n    const [productPreview, setProductPreview] = useState(false);\n\n    const nextStep = () => {\n        console.log(product);\n        steps[1].status = 'current';\n        setProductInfo(false);\n        setProductPreview(true);\n        product.images.forEach(file => {\n            const url = URL.createObjectURL(file);\n            setPreviewImages(prevImages => [...prevImages, url]);\n        });\n    }\n\n    const submitProduct = () => {\n        console.log(\"Product\", product);\n        let data = new FormData();\n        Object.entries(product).forEach(info => {\n            data.append(info[0], JSON.stringify(info[1]));\n            if (info[0] === 'images') {\n                info[1].forEach(image => {\n                    data.append(info[0], image);\n                })\n            }\n        });\n        fetch('http://localhost:3000/Admin/Product', {\n            method: 'POST',\n            body: data,\n        })\n        .then(res => res.json())\n        .then(data => {\n            console.log(data);\n            if (data.message === 'success') {\n                setProductInfo(true);\n                setProductPreview(false);\n                setPreviewImages([]);\n            } else {\n                console.log(data);\n            }\n        })\n    }\n    \n  return (\n    <div className='mt-4'>\n        <Tabs tabs={tabs} />\n        <Steps steps={steps} />\n        { productInfo && !productPreview ? \n        <section className='mt-10'>\n            {/* Product Name Input */}\n            <TextInput label={'Product Name'} name={'name'} id={'product-name'} placeholder={'Fancy Club Dress'} handleChange={changeProduct} />\n            <WebsiteInput label={'Product Link'} name={'productLink'} id={'product-link'} placeholder={'www.example.com/'} handleChange={changeProduct} />\n            <ImageUpload label={'Product Image'} name={'images'} handleChange={changeProduct} />\n            {/* Product Description */}\n            <Textarea label={'Product Description'} name={'productDescription'} handleChange={changeProduct} />\n            {/* Sizing List */}\n            <Checkboxes handleChange={changeProduct} name={'sizes'} />\n            {/* Size Metrics Inputs */}\n            <SizingTable name={'sizeReference'} productSizes={product.sizes} handleChange={changeProduct} />\n            {/* Gender */}\n            <Dropdown name={'gender'} list={gender} label={'Product Gender'} handleChange={changeProduct} />\n            {/* Colour */}\n            <Dropdown name={'colour'} list={colours} label={'Product Colour'} handleChange={changeProduct} />\n            {/* Fitting Type */}\n            <Dropdown name={'fitType'} list={fitting} label={'Product Fit Type'} handleChange={changeProduct} />\n            {/* Available Quantity */}\n            <NumberInput label={'Product Quantity'} name={'quantity'} id={'quantity'} placeholder={100} handleChange={changeProduct} />\n            {/* Pricing */}\n            <MultiPriceInput label={'Cost'} name={'cost'} id={'product-cost'} handleChange={changeProduct} />\n            {/* Pricing */}\n            <MultiPriceInput label={'Pricing'} name={'price'} id={'product-price'} handleChange={changeProduct} />\n            {/* Delivery Time */}\n            <Dropdown name={'deliveryTime'} list={deliveryTime} label={'Delivery Time'} handleChange={changeProduct} />\n            {/* Category */}\n            <Dropdown name={'category'} list={categories} label={'Product Category'} handleChange={changeProduct} />\n            {/* Product Features */}\n            <TextInput label={'Product Features'} name={'features'} id={'product-feature'} placeholder={'Anti-wrinkle'} handleChange={changeProduct} />\n            {/* Product Model Number */}\n            <TextInput label={'Product Model Number'} name={'modelNumber'} id={'product-model-number'} placeholder={'MDK1927c'} handleChange={changeProduct} />\n            {/* Product Keywords */}\n            <TextInput label={'Product Keywords'} name={'keywords'} id={'product-keywords'} placeholder={'Sexy, Club, Clean'} handleChange={changeProduct} />\n            <Dropdown name={'season'} list={season} label={'Product Season'} handleChange={changeProduct} />\n            <Dropdown name={'fabric'} list={fabric} label={'Product Fabric'} handleChange={changeProduct} />\n            <Textarea label={'Product Washing Info'} name={'productWashing'} handleChange={changeProduct} />\n            <div className='mt-4 flex justify-end'>\n                <button\n                    type=\"button\"\n                    className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    onClick={nextStep}\n                >\n                    Preview\n                </button>\n            </div>\n        </section>\n        :\n        <section>\n            <div className=\"pt-6\">\n                <nav aria-label=\"Breadcrumb\">\n                <ol role=\"list\" className=\"max-w-2xl mx-auto px-4 flex items-center space-x-2 sm:px-6 lg:max-w-7xl lg:px-8\">\n                    <li>\n                    <div className=\"flex items-center\">\n                        <a href={'#'} className=\"mr-2 text-sm font-medium text-gray-900\">\n                        {product.gender}\n                        </a>\n                        <svg\n                        width={16}\n                        height={20}\n                        viewBox=\"0 0 16 20\"\n                        fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        aria-hidden=\"true\"\n                        className=\"w-4 h-5 text-gray-300\"\n                        >\n                        <path d=\"M5.697 4.34L8.98 16.532h1.327L7.025 4.341H5.697z\" />\n                        </svg>\n                    </div>\n                    </li>\n                    <li>\n                    <div className=\"flex items-center\">\n                        <a href={`/Clothing/${product.category}`} className=\"mr-2 text-sm font-medium text-gray-900\">\n                        {product.category}\n                        </a>\n                        <svg\n                        width={16}\n                        height={20}\n                        viewBox=\"0 0 16 20\"\n                        fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        aria-hidden=\"true\"\n                        className=\"w-4 h-5 text-gray-300\"\n                        >\n                        <path d=\"M5.697 4.34L8.98 16.532h1.327L7.025 4.341H5.697z\" />\n                        </svg>\n                    </div>\n                    </li>\n                    <li className=\"text-sm\">\n                    <a href={product.href} aria-current=\"page\" className=\"font-medium text-gray-500 hover:text-gray-600\">\n                        {product.name}\n                    </a>\n                    </li>\n                </ol>\n                </nav>\n\n                {/* Image gallery */}\n                <div className=\"mt-6 max-w-2xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-3 lg:gap-x-8\">\n                <div className=\"hidden aspect-w-3 aspect-h-4 rounded-lg overflow-hidden lg:block\">\n                    <img\n                    src={previewImages[0]}\n                    className=\"w-full h-full object-center object-cover\"\n                    />\n                </div>\n                <div className=\"aspect-w-4 aspect-h-5 sm:rounded-lg sm:overflow-hidden lg:aspect-w-3 lg:aspect-h-4\">\n                    <img\n                    src={previewImages[1]}\n                    className=\"w-full h-full object-center object-cover\"\n                    />\n                </div>\n                <div className=\"aspect-w-4 aspect-h-5 sm:rounded-lg sm:overflow-hidden lg:aspect-w-3 lg:aspect-h-4\">\n                    <img\n                    src={previewImages[2]}\n                    className=\"w-full h-full object-center object-cover\"\n                    />\n                </div>\n                </div>\n\n                {/* Product info */}\n                <div className=\"max-w-2xl mx-auto pt-10 pb-16 px-4 sm:px-6 lg:max-w-7xl lg:pt-16 lg:pb-24 lg:px-8 lg:grid lg:grid-cols-3 lg:grid-rows-[auto,auto,1fr] lg:gap-x-8\">\n                <div className=\"lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8\">\n                    <h1 className=\"text-2xl font-extrabold tracking-tight text-gray-900 sm:text-3xl\">{product.name}</h1>\n                </div>\n\n                {/* Options */}\n                <div className=\"mt-4 lg:mt-0 lg:row-span-3\">\n                    <h2 className=\"sr-only\">Product information</h2>\n                    <p className=\"text-3xl text-gray-900\">£{product.price}</p>\n\n                    {/* Reviews */}\n                    <div className=\"mt-6\">\n                    <h3 className=\"sr-only\">Reviews</h3>\n                    <div className=\"flex items-center\">\n                        <div className=\"flex items-center\">\n                        {[0, 1, 2, 3, 4].map((rating) => (\n                            <StarIcon\n                            key={rating}\n                            className={classNames(\n                                reviews.average > rating ? 'text-gray-900' : 'text-gray-200',\n                                'h-5 w-5 flex-shrink-0'\n                            )}\n                            aria-hidden=\"true\"\n                            />\n                        ))}\n                        </div>\n                        <p className=\"sr-only\">{reviews.average} out of 5 stars</p>\n                        <a href={reviews.href} className=\"ml-3 text-sm font-medium text-indigo-600 hover:text-indigo-500\">\n                        {reviews.totalCount} reviews\n                        </a>\n                    </div>\n                    </div>\n\n                    <form className=\"mt-10\">\n                    {/* Colors */}\n                    <div>\n                        <h3 className=\"text-sm text-gray-900 font-medium\">Color</h3>\n                        <RadioGroup value={selectedColor} onChange={setSelectedColor} className=\"mt-4\">\n                        <RadioGroup.Label className=\"sr-only\">Choose a color</RadioGroup.Label>\n                        <div className=\"flex items-center space-x-3\">\n                            {colours.map((colour) => {\n                            console.log()\n                            if (product.colour === colour.name) {\n                                return (\n                                <RadioGroup.Option\n                                key={colour.name}\n                                value={colour}\n                                className={({ active, checked }) =>\n                                    classNames(\n                                    colour.selectedClass,\n                                    active && checked ? 'ring ring-offset-1' : '',\n                                    !active && checked ? 'ring-2' : '',\n                                    '-m-0.5 relative p-0.5 rounded-full flex items-center justify-center cursor-pointer focus:outline-none'\n                                    )\n                                }\n                                >\n                                <RadioGroup.Label as=\"span\" className=\"sr-only\">\n                                    {colour.name}\n                                </RadioGroup.Label>\n                                <span\n                                    aria-hidden=\"true\"\n                                    className={classNames(\n                                    colour.class,\n                                    'h-8 w-8 border border-black border-opacity-10 rounded-full'\n                                    )}\n                                />\n                                </RadioGroup.Option>\n                                )\n                            }\n                            })}\n                        </div>\n                        </RadioGroup>\n                    </div>\n\n                    {/* Sizes */}\n                    <div className=\"mt-10\">\n                        <div className=\"flex items-center justify-between\">\n                        <h3 className=\"text-sm text-gray-900 font-medium\">Size</h3>\n                        <a href=\"#\" className=\"text-sm font-medium text-indigo-600 hover:text-indigo-500\">\n                            Size guide\n                        </a>\n                        </div>\n\n                        <RadioGroup value={selectedSize} onChange={setSelectedSize} className=\"mt-4\">\n                        <RadioGroup.Label className=\"sr-only\">Choose a size</RadioGroup.Label>\n                        <div className=\"grid grid-cols-4 gap-4 sm:grid-cols-8 lg:grid-cols-4\">\n                            {product.sizes.map((size) => (\n                            <RadioGroup.Option\n                                key={size.id}\n                                value={size}\n                                disabled={!size.checked}\n                                className={({ active }) =>\n                                classNames(\n                                    size.checked\n                                    ? 'bg-white shadow-sm text-gray-900 cursor-pointer'\n                                    : 'bg-gray-50 text-gray-200 cursor-not-allowed',\n                                    active ? 'ring-2 ring-indigo-500' : '',\n                                    'group relative border rounded-md py-3 px-4 flex items-center justify-center text-sm font-medium uppercase hover:bg-gray-50 focus:outline-none sm:flex-1 sm:py-6'\n                                )\n                                }\n                            >\n                                {({ active, checked }) => (\n                                <>\n                                    <RadioGroup.Label as=\"span\">{size.size}</RadioGroup.Label>\n                                    {size.checked ? (\n                                    <span\n                                        className={classNames(\n                                        active ? 'border' : 'border-2',\n                                        checked ? 'border-indigo-500' : 'border-transparent',\n                                        'absolute -inset-px rounded-md pointer-events-none'\n                                        )}\n                                        aria-hidden=\"true\"\n                                    />\n                                    ) : (\n                                    <span\n                                        aria-hidden=\"true\"\n                                        className=\"absolute -inset-px rounded-md border-2 border-gray-200 pointer-events-none\"\n                                    >\n                                        <svg\n                                        className=\"absolute inset-0 w-full h-full text-gray-200 stroke-2\"\n                                        viewBox=\"0 0 100 100\"\n                                        preserveAspectRatio=\"none\"\n                                        stroke=\"currentColor\"\n                                        >\n                                        <line x1={0} y1={100} x2={100} y2={0} vectorEffect=\"non-scaling-stroke\" />\n                                        </svg>\n                                    </span>\n                                    )}\n                                </>\n                                )}\n                            </RadioGroup.Option>\n                            ))}\n                        </div>\n                        </RadioGroup>\n                    </div>\n\n                    <button\n                        onClick={(e) => {e.preventDefault(); dispatch(add({product}))}}\n                        type=\"submit\"\n                        className=\"mt-10 w-full bg-indigo-600 border border-transparent rounded-md py-3 px-8 flex items-center justify-center text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    >\n                        Add to bag\n                    </button>\n                    </form>\n                </div>\n\n                <div className=\"py-10 lg:pt-6 lg:pb-16 lg:col-start-1 lg:col-span-2 lg:border-r lg:border-gray-200 lg:pr-8\">\n                    {/* Description and details */}\n                    <div>\n                    <h3 className=\"text-gray-500\">Description</h3>\n\n                    <div className=\"space-y-6\">\n                        <p className=\"text-base text-gray-900\">{product.productDescription}</p>\n                    </div>\n                    </div>\n\n                    <div className='mt-4'>\n                    <h5 className=\"text-gray-500\">Fit Type</h5>\n\n                    <div className=\"space-y-6\">\n                        <p className=\"text-base text-gray-900\">{product.fitType}</p>\n                    </div>\n                    </div>\n\n                    <div className='mt-4'>\n                    <h5 className=\"text-gray-500\">Features</h5>\n\n                    <div className=\"space-y-6\">\n                        <p className=\"text-base text-gray-900\">{product.features}</p>\n                    </div>\n                    </div>\n\n                    <div className='mt-4'>\n                    <h5 className=\"text-gray-500\">Fabric</h5>\n\n                    <div className=\"space-y-6\">\n                        <p className=\"text-base text-gray-900\">{product.fabric}</p>\n                    </div>\n                    </div>\n\n                    <div className='mt-4'>\n                    <h5 className=\"text-gray-500\">Season</h5>\n\n                    <div className=\"space-y-6\">\n                        <p className=\"text-base text-gray-900\">{product.season}</p>\n                    </div>\n                    </div>\n\n                    <div className='mt-4'>\n                    <h5 className=\"text-gray-500\">Keywords</h5>\n\n                    <div className=\"space-y-6\">\n                        <p className=\"text-base text-gray-900\">{product.keywords}</p>\n                    </div>\n                    </div>\n\n                    <div className='mt-4'>\n                    <h5 className=\"text-gray-500\">Product Washing</h5>\n\n                    <div className=\"space-y-6\">\n                        <p className=\"text-base text-gray-900\">{product.productWashing}</p>\n                    </div>\n                    </div>\n\n                    {/* <div className=\"mt-10\">\n                    <h3 className=\"text-sm font-medium text-gray-900\">Highlights</h3>\n\n                    <div className=\"mt-4\">\n                        <ul role=\"list\" className=\"pl-4 list-disc text-sm space-y-2\">\n                        {product.highlights.map((highlight) => (\n                            <li key={highlight} className=\"text-gray-400\">\n                            <span className=\"text-gray-600\">{highlight}</span>\n                            </li>\n                        ))}\n                        </ul>\n                    </div>\n                    </div> */}\n\n                    {/* <div className=\"mt-10\">\n                    <h2 className=\"text-sm font-medium text-gray-900\">Details</h2>\n\n                    <div className=\"mt-4 space-y-6\">\n                        <p className=\"text-sm text-gray-600\">{product.details}</p>\n                    </div>\n                    </div> */}\n                    </div>\n                </div>\n            </div>\n            <div className='mt-4 flex justify-end'>\n                <button\n                    type=\"button\"\n                    className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                    onClick={submitProduct}\n                >\n                    Submit\n                </button>\n            </div>\n        </section>\n    }\n    </div>\n  )\n}\n\nexport default ProductsAdmin","/Users/robert/Documents/Web Dev/Active Development/fluctur-store/frontend/src/pages/admin-dashboard/sub-pages/dashboard.admin.js",[],[],{"ruleId":"273","severity":1,"message":"274","line":274,"column":33,"nodeType":"275","endLine":278,"endColumn":34},{"ruleId":"276","severity":1,"message":"277","line":307,"column":19,"nodeType":"275","endLine":307,"endColumn":70},{"ruleId":"276","severity":1,"message":"277","line":337,"column":17,"nodeType":"275","endLine":337,"endColumn":84},{"ruleId":"276","severity":1,"message":"277","line":418,"column":47,"nodeType":"275","endLine":422,"endColumn":48},{"ruleId":"273","severity":1,"message":"274","line":425,"column":47,"nodeType":"275","endLine":429,"endColumn":48},{"ruleId":"276","severity":1,"message":"277","line":476,"column":17,"nodeType":"275","endLine":476,"endColumn":106},{"ruleId":"276","severity":1,"message":"278","line":487,"column":17,"nodeType":"275","endLine":487,"endColumn":106},{"ruleId":"276","severity":1,"message":"277","line":494,"column":17,"nodeType":"275","endLine":494,"endColumn":87},{"ruleId":"276","severity":1,"message":"277","line":499,"column":17,"nodeType":"275","endLine":499,"endColumn":74},{"ruleId":"279","severity":1,"message":"280","line":1,"column":17,"nodeType":"281","messageId":"282","endLine":1,"endColumn":25},{"ruleId":"279","severity":1,"message":"283","line":1,"column":27,"nodeType":"281","messageId":"282","endLine":1,"endColumn":36},{"ruleId":"276","severity":1,"message":"277","line":19,"column":13,"nodeType":"275","endLine":22,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":40,"column":21,"nodeType":"275","endLine":40,"endColumn":79},{"ruleId":"284","severity":1,"message":"285","line":43,"column":25,"nodeType":"275","endLine":46,"endColumn":27},{"ruleId":"276","severity":1,"message":"277","line":75,"column":21,"nodeType":"275","endLine":75,"endColumn":103},{"ruleId":"279","severity":1,"message":"286","line":4,"column":8,"nodeType":"281","messageId":"282","endLine":4,"endColumn":16},{"ruleId":"273","severity":1,"message":"287","line":6,"column":9,"nodeType":"275","endLine":6,"endColumn":81},{"ruleId":"288","severity":1,"message":"289","line":21,"column":8,"nodeType":"290","endLine":21,"endColumn":15,"suggestions":"291"},{"ruleId":"284","severity":1,"message":"285","line":60,"column":21,"nodeType":"275","endLine":63,"endColumn":23},{"ruleId":"288","severity":1,"message":"289","line":14,"column":6,"nodeType":"290","endLine":14,"endColumn":13,"suggestions":"292"},{"ruleId":"288","severity":1,"message":"289","line":78,"column":8,"nodeType":"290","endLine":78,"endColumn":15,"suggestions":"293"},{"ruleId":"288","severity":1,"message":"289","line":35,"column":8,"nodeType":"290","endLine":35,"endColumn":16,"suggestions":"294"},{"ruleId":"273","severity":1,"message":"287","line":51,"column":11,"nodeType":"275","endLine":51,"endColumn":119},{"ruleId":"276","severity":1,"message":"277","line":54,"column":17,"nodeType":"275","endLine":54,"endColumn":82},{"ruleId":"284","severity":1,"message":"285","line":99,"column":13,"nodeType":"275","endLine":102,"endColumn":15},{"ruleId":"284","severity":1,"message":"285","line":105,"column":13,"nodeType":"275","endLine":108,"endColumn":15},{"ruleId":"284","severity":1,"message":"285","line":111,"column":13,"nodeType":"275","endLine":114,"endColumn":15},{"ruleId":"295","severity":1,"message":"296","line":159,"column":43,"nodeType":"297","messageId":"298","endLine":159,"endColumn":45},{"ruleId":"276","severity":1,"message":"277","line":197,"column":19,"nodeType":"275","endLine":197,"endColumn":101},{"ruleId":"273","severity":1,"message":"274","line":136,"column":21,"nodeType":"275","endLine":136,"endColumn":85},{"ruleId":"273","severity":1,"message":"274","line":267,"column":17,"nodeType":"275","endLine":267,"endColumn":119},{"ruleId":"273","severity":1,"message":"274","line":379,"column":15,"nodeType":"275","endLine":379,"endColumn":68},{"ruleId":"284","severity":1,"message":"285","line":383,"column":23,"nodeType":"275","endLine":383,"endColumn":125},{"ruleId":"276","severity":1,"message":"277","line":103,"column":27,"nodeType":"275","endLine":103,"endColumn":89},{"ruleId":"273","severity":1,"message":"274","line":103,"column":19,"nodeType":"275","endLine":103,"endColumn":62},{"ruleId":"273","severity":1,"message":"274","line":115,"column":19,"nodeType":"275","endLine":115,"endColumn":62},{"ruleId":"273","severity":1,"message":"274","line":129,"column":19,"nodeType":"275","endLine":129,"endColumn":62},{"ruleId":"273","severity":1,"message":"274","line":141,"column":19,"nodeType":"275","endLine":141,"endColumn":62},{"ruleId":"279","severity":1,"message":"299","line":16,"column":8,"nodeType":"281","messageId":"282","endLine":16,"endColumn":20},{"ruleId":"273","severity":1,"message":"287","line":151,"column":17,"nodeType":"275","endLine":151,"endColumn":125},{"ruleId":"276","severity":1,"message":"277","line":154,"column":25,"nodeType":"275","endLine":154,"endColumn":90},{"ruleId":"284","severity":1,"message":"285","line":199,"column":21,"nodeType":"275","endLine":202,"endColumn":23},{"ruleId":"284","severity":1,"message":"285","line":205,"column":21,"nodeType":"275","endLine":208,"endColumn":23},{"ruleId":"284","severity":1,"message":"285","line":211,"column":21,"nodeType":"275","endLine":214,"endColumn":23},{"ruleId":"295","severity":1,"message":"296","line":259,"column":51,"nodeType":"297","messageId":"298","endLine":259,"endColumn":53},{"ruleId":"276","severity":1,"message":"277","line":297,"column":25,"nodeType":"275","endLine":297,"endColumn":107},"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Products' is defined but never used.","The element ol has an implicit role of list. Defining this explicitly is redundant and should be avoided.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleChange' and 'name'. Either include them or remove the dependency array. If 'handleChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["300"],["301"],["302"],["303"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'SwitchToggle' is defined but never used.",{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},"Update the dependencies array to be: [files, handleChange, name]",{"range":"312","text":"313"},"Update the dependencies array to be: [handleChange, name, value]",{"range":"314","text":"315"},"Update the dependencies array to be: [handleChange, name, sizes]",{"range":"316","text":"317"},"Update the dependencies array to be: [handleChange, name, values]",{"range":"318","text":"319"},[679,686],"[files, handleChange, name]",[320,327],"[handleChange, name, value]",[1582,1589],"[handleChange, name, sizes]",[1106,1114],"[handleChange, name, values]"]